// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: map.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "map.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace map {

namespace {

const ::google::protobuf::Descriptor* Struct_Role_Situation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Struct_Role_Situation_reflection_ = NULL;
const ::google::protobuf::Descriptor* Struct_Point3D_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Struct_Point3D_reflection_ = NULL;
const ::google::protobuf::Descriptor* Struct_Attr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Struct_Attr_reflection_ = NULL;
const ::google::protobuf::Descriptor* Struct_Attr_Basics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Struct_Attr_Basics_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_EnterMap_Request_1001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_EnterMap_Request_1001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_EnterMap_Response_1001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_EnterMap_Response_1001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_GetTimeGap_Request_1905_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_GetTimeGap_Request_1905_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_GetTimeGap_Response_1905_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_GetTimeGap_Response_1905_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleMove_Request_1011_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleMove_Request_1011_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleMove_Response_1011_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleMove_Response_1011_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleStop_Request_1012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleStop_Request_1012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleStop_Response_1012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleStop_Response_1012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleMoveToPosition_Request_1021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleMoveToPosition_Request_1021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleMoveToPosition_Response_1021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleMoveToPosition_Response_1021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_GetAllRole_Request_1061_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_GetAllRole_Request_1061_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_GetAllRole_Response_1061_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_GetAllRole_Response_1061_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleMoveCheckout_Request_1062_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleMoveCheckout_Request_1062_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleMoveCheckout_Response_1062_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleMoveCheckout_Response_1062_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RecastSkill_Request_1200_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RecastSkill_Request_1200_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RecastSkill_Response_1200_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RecastSkill_Response_1200_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleGetAttr_Request_1221_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleGetAttr_Request_1221_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleGetAttr_Response_1221_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleGetAttr_Response_1221_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleEnterMap_Broadcast_1101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleEnterMap_Broadcast_1101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleMove_Broadcast_1111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleMove_Broadcast_1111_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleStop_Broadcast_1112_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleStop_Broadcast_1112_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleMoveToPosition_Broadcast_1121_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleMoveToPosition_Broadcast_1121_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_RoleRemove_Broadcast_1151_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_RoleRemove_Broadcast_1151_reflection_ = NULL;
const ::google::protobuf::Descriptor* Map_AttrChange_Broadcast_1201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Map_AttrChange_Broadcast_1201_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_map_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_map_2eproto() {
  protobuf_AddDesc_map_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "map.proto");
  GOOGLE_CHECK(file != NULL);
  Struct_Role_Situation_descriptor_ = file->message_type(0);
  static const int Struct_Role_Situation_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Role_Situation, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Role_Situation, typeid__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Role_Situation, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Role_Situation, nowpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Role_Situation, situation_),
  };
  Struct_Role_Situation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Struct_Role_Situation_descriptor_,
      Struct_Role_Situation::default_instance_,
      Struct_Role_Situation_offsets_,
      -1,
      -1,
      -1,
      sizeof(Struct_Role_Situation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Role_Situation, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Role_Situation, _is_default_instance_));
  Struct_Point3D_descriptor_ = file->message_type(1);
  static const int Struct_Point3D_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Point3D, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Point3D, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Point3D, y_),
  };
  Struct_Point3D_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Struct_Point3D_descriptor_,
      Struct_Point3D::default_instance_,
      Struct_Point3D_offsets_,
      -1,
      -1,
      -1,
      sizeof(Struct_Point3D),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Point3D, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Point3D, _is_default_instance_));
  Struct_Attr_descriptor_ = file->message_type(2);
  static const int Struct_Attr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Attr, attrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Attr, attrvalue_),
  };
  Struct_Attr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Struct_Attr_descriptor_,
      Struct_Attr::default_instance_,
      Struct_Attr_offsets_,
      -1,
      -1,
      -1,
      sizeof(Struct_Attr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Attr, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Attr, _is_default_instance_));
  Struct_Attr_Basics_descriptor_ = file->message_type(3);
  static const int Struct_Attr_Basics_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Attr_Basics, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Attr_Basics, attrs_),
  };
  Struct_Attr_Basics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Struct_Attr_Basics_descriptor_,
      Struct_Attr_Basics::default_instance_,
      Struct_Attr_Basics_offsets_,
      -1,
      -1,
      -1,
      sizeof(Struct_Attr_Basics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Attr_Basics, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Attr_Basics, _is_default_instance_));
  Map_EnterMap_Request_1001_descriptor_ = file->message_type(4);
  static const int Map_EnterMap_Request_1001_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_EnterMap_Request_1001, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_EnterMap_Request_1001, roleuid_),
  };
  Map_EnterMap_Request_1001_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_EnterMap_Request_1001_descriptor_,
      Map_EnterMap_Request_1001::default_instance_,
      Map_EnterMap_Request_1001_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_EnterMap_Request_1001),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_EnterMap_Request_1001, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_EnterMap_Request_1001, _is_default_instance_));
  Map_EnterMap_Response_1001_descriptor_ = file->message_type(5);
  static const int Map_EnterMap_Response_1001_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_EnterMap_Response_1001, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_EnterMap_Response_1001, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_EnterMap_Response_1001, nowpoint_),
  };
  Map_EnterMap_Response_1001_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_EnterMap_Response_1001_descriptor_,
      Map_EnterMap_Response_1001::default_instance_,
      Map_EnterMap_Response_1001_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_EnterMap_Response_1001),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_EnterMap_Response_1001, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_EnterMap_Response_1001, _is_default_instance_));
  Map_GetTimeGap_Request_1905_descriptor_ = file->message_type(6);
  static const int Map_GetTimeGap_Request_1905_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetTimeGap_Request_1905, timems_),
  };
  Map_GetTimeGap_Request_1905_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_GetTimeGap_Request_1905_descriptor_,
      Map_GetTimeGap_Request_1905::default_instance_,
      Map_GetTimeGap_Request_1905_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_GetTimeGap_Request_1905),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetTimeGap_Request_1905, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetTimeGap_Request_1905, _is_default_instance_));
  Map_GetTimeGap_Response_1905_descriptor_ = file->message_type(7);
  static const int Map_GetTimeGap_Response_1905_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetTimeGap_Response_1905, timems_),
  };
  Map_GetTimeGap_Response_1905_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_GetTimeGap_Response_1905_descriptor_,
      Map_GetTimeGap_Response_1905::default_instance_,
      Map_GetTimeGap_Response_1905_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_GetTimeGap_Response_1905),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetTimeGap_Response_1905, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetTimeGap_Response_1905, _is_default_instance_));
  Map_RoleMove_Request_1011_descriptor_ = file->message_type(8);
  static const int Map_RoleMove_Request_1011_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Request_1011, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Request_1011, timems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Request_1011, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Request_1011, nowpoint_),
  };
  Map_RoleMove_Request_1011_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleMove_Request_1011_descriptor_,
      Map_RoleMove_Request_1011::default_instance_,
      Map_RoleMove_Request_1011_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleMove_Request_1011),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Request_1011, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Request_1011, _is_default_instance_));
  Map_RoleMove_Response_1011_descriptor_ = file->message_type(9);
  static const int Map_RoleMove_Response_1011_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Response_1011, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Response_1011, roleuid_),
  };
  Map_RoleMove_Response_1011_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleMove_Response_1011_descriptor_,
      Map_RoleMove_Response_1011::default_instance_,
      Map_RoleMove_Response_1011_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleMove_Response_1011),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Response_1011, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Response_1011, _is_default_instance_));
  Map_RoleStop_Request_1012_descriptor_ = file->message_type(10);
  static const int Map_RoleStop_Request_1012_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Request_1012, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Request_1012, timems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Request_1012, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Request_1012, nowpoint_),
  };
  Map_RoleStop_Request_1012_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleStop_Request_1012_descriptor_,
      Map_RoleStop_Request_1012::default_instance_,
      Map_RoleStop_Request_1012_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleStop_Request_1012),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Request_1012, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Request_1012, _is_default_instance_));
  Map_RoleStop_Response_1012_descriptor_ = file->message_type(11);
  static const int Map_RoleStop_Response_1012_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Response_1012, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Response_1012, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Response_1012, nowpoint_),
  };
  Map_RoleStop_Response_1012_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleStop_Response_1012_descriptor_,
      Map_RoleStop_Response_1012::default_instance_,
      Map_RoleStop_Response_1012_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleStop_Response_1012),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Response_1012, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Response_1012, _is_default_instance_));
  Map_RoleMoveToPosition_Request_1021_descriptor_ = file->message_type(12);
  static const int Map_RoleMoveToPosition_Request_1021_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Request_1021, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Request_1021, timems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Request_1021, toposition_),
  };
  Map_RoleMoveToPosition_Request_1021_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleMoveToPosition_Request_1021_descriptor_,
      Map_RoleMoveToPosition_Request_1021::default_instance_,
      Map_RoleMoveToPosition_Request_1021_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleMoveToPosition_Request_1021),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Request_1021, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Request_1021, _is_default_instance_));
  Map_RoleMoveToPosition_Response_1021_descriptor_ = file->message_type(13);
  static const int Map_RoleMoveToPosition_Response_1021_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Response_1021, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Response_1021, roleuid_),
  };
  Map_RoleMoveToPosition_Response_1021_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleMoveToPosition_Response_1021_descriptor_,
      Map_RoleMoveToPosition_Response_1021::default_instance_,
      Map_RoleMoveToPosition_Response_1021_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleMoveToPosition_Response_1021),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Response_1021, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Response_1021, _is_default_instance_));
  Map_GetAllRole_Request_1061_descriptor_ = file->message_type(14);
  static const int Map_GetAllRole_Request_1061_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetAllRole_Request_1061, roleuid_),
  };
  Map_GetAllRole_Request_1061_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_GetAllRole_Request_1061_descriptor_,
      Map_GetAllRole_Request_1061::default_instance_,
      Map_GetAllRole_Request_1061_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_GetAllRole_Request_1061),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetAllRole_Request_1061, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetAllRole_Request_1061, _is_default_instance_));
  Map_GetAllRole_Response_1061_descriptor_ = file->message_type(15);
  static const int Map_GetAllRole_Response_1061_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetAllRole_Response_1061, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetAllRole_Response_1061, rolemessage_),
  };
  Map_GetAllRole_Response_1061_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_GetAllRole_Response_1061_descriptor_,
      Map_GetAllRole_Response_1061::default_instance_,
      Map_GetAllRole_Response_1061_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_GetAllRole_Response_1061),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetAllRole_Response_1061, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_GetAllRole_Response_1061, _is_default_instance_));
  Map_RoleMoveCheckout_Request_1062_descriptor_ = file->message_type(16);
  static const int Map_RoleMoveCheckout_Request_1062_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveCheckout_Request_1062, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveCheckout_Request_1062, timems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveCheckout_Request_1062, nowpoint_),
  };
  Map_RoleMoveCheckout_Request_1062_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleMoveCheckout_Request_1062_descriptor_,
      Map_RoleMoveCheckout_Request_1062::default_instance_,
      Map_RoleMoveCheckout_Request_1062_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleMoveCheckout_Request_1062),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveCheckout_Request_1062, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveCheckout_Request_1062, _is_default_instance_));
  Map_RoleMoveCheckout_Response_1062_descriptor_ = file->message_type(17);
  static const int Map_RoleMoveCheckout_Response_1062_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveCheckout_Response_1062, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveCheckout_Response_1062, timems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveCheckout_Response_1062, nowpoint_),
  };
  Map_RoleMoveCheckout_Response_1062_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleMoveCheckout_Response_1062_descriptor_,
      Map_RoleMoveCheckout_Response_1062::default_instance_,
      Map_RoleMoveCheckout_Response_1062_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleMoveCheckout_Response_1062),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveCheckout_Response_1062, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveCheckout_Response_1062, _is_default_instance_));
  Map_RecastSkill_Request_1200_descriptor_ = file->message_type(18);
  static const int Map_RecastSkill_Request_1200_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RecastSkill_Request_1200, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RecastSkill_Request_1200, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RecastSkill_Request_1200, targetuid_),
  };
  Map_RecastSkill_Request_1200_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RecastSkill_Request_1200_descriptor_,
      Map_RecastSkill_Request_1200::default_instance_,
      Map_RecastSkill_Request_1200_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RecastSkill_Request_1200),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RecastSkill_Request_1200, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RecastSkill_Request_1200, _is_default_instance_));
  Map_RecastSkill_Response_1200_descriptor_ = file->message_type(19);
  static const int Map_RecastSkill_Response_1200_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RecastSkill_Response_1200, errorcode_),
  };
  Map_RecastSkill_Response_1200_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RecastSkill_Response_1200_descriptor_,
      Map_RecastSkill_Response_1200::default_instance_,
      Map_RecastSkill_Response_1200_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RecastSkill_Response_1200),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RecastSkill_Response_1200, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RecastSkill_Response_1200, _is_default_instance_));
  Map_RoleGetAttr_Request_1221_descriptor_ = file->message_type(20);
  static const int Map_RoleGetAttr_Request_1221_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleGetAttr_Request_1221, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleGetAttr_Request_1221, attrid_),
  };
  Map_RoleGetAttr_Request_1221_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleGetAttr_Request_1221_descriptor_,
      Map_RoleGetAttr_Request_1221::default_instance_,
      Map_RoleGetAttr_Request_1221_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleGetAttr_Request_1221),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleGetAttr_Request_1221, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleGetAttr_Request_1221, _is_default_instance_));
  Map_RoleGetAttr_Response_1221_descriptor_ = file->message_type(21);
  static const int Map_RoleGetAttr_Response_1221_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleGetAttr_Response_1221, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleGetAttr_Response_1221, attrs_),
  };
  Map_RoleGetAttr_Response_1221_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleGetAttr_Response_1221_descriptor_,
      Map_RoleGetAttr_Response_1221::default_instance_,
      Map_RoleGetAttr_Response_1221_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleGetAttr_Response_1221),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleGetAttr_Response_1221, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleGetAttr_Response_1221, _is_default_instance_));
  Map_RoleEnterMap_Broadcast_1101_descriptor_ = file->message_type(22);
  static const int Map_RoleEnterMap_Broadcast_1101_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleEnterMap_Broadcast_1101, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleEnterMap_Broadcast_1101, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleEnterMap_Broadcast_1101, nowpoint_),
  };
  Map_RoleEnterMap_Broadcast_1101_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleEnterMap_Broadcast_1101_descriptor_,
      Map_RoleEnterMap_Broadcast_1101::default_instance_,
      Map_RoleEnterMap_Broadcast_1101_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleEnterMap_Broadcast_1101),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleEnterMap_Broadcast_1101, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleEnterMap_Broadcast_1101, _is_default_instance_));
  Map_RoleMove_Broadcast_1111_descriptor_ = file->message_type(23);
  static const int Map_RoleMove_Broadcast_1111_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Broadcast_1111, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Broadcast_1111, timems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Broadcast_1111, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Broadcast_1111, nowpoint_),
  };
  Map_RoleMove_Broadcast_1111_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleMove_Broadcast_1111_descriptor_,
      Map_RoleMove_Broadcast_1111::default_instance_,
      Map_RoleMove_Broadcast_1111_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleMove_Broadcast_1111),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Broadcast_1111, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMove_Broadcast_1111, _is_default_instance_));
  Map_RoleStop_Broadcast_1112_descriptor_ = file->message_type(24);
  static const int Map_RoleStop_Broadcast_1112_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Broadcast_1112, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Broadcast_1112, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Broadcast_1112, nowpoint_),
  };
  Map_RoleStop_Broadcast_1112_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleStop_Broadcast_1112_descriptor_,
      Map_RoleStop_Broadcast_1112::default_instance_,
      Map_RoleStop_Broadcast_1112_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleStop_Broadcast_1112),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Broadcast_1112, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleStop_Broadcast_1112, _is_default_instance_));
  Map_RoleMoveToPosition_Broadcast_1121_descriptor_ = file->message_type(25);
  static const int Map_RoleMoveToPosition_Broadcast_1121_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Broadcast_1121, roleuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Broadcast_1121, timems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Broadcast_1121, startposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Broadcast_1121, toposition_),
  };
  Map_RoleMoveToPosition_Broadcast_1121_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleMoveToPosition_Broadcast_1121_descriptor_,
      Map_RoleMoveToPosition_Broadcast_1121::default_instance_,
      Map_RoleMoveToPosition_Broadcast_1121_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleMoveToPosition_Broadcast_1121),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Broadcast_1121, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleMoveToPosition_Broadcast_1121, _is_default_instance_));
  Map_RoleRemove_Broadcast_1151_descriptor_ = file->message_type(26);
  static const int Map_RoleRemove_Broadcast_1151_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleRemove_Broadcast_1151, roleuid_),
  };
  Map_RoleRemove_Broadcast_1151_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_RoleRemove_Broadcast_1151_descriptor_,
      Map_RoleRemove_Broadcast_1151::default_instance_,
      Map_RoleRemove_Broadcast_1151_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_RoleRemove_Broadcast_1151),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleRemove_Broadcast_1151, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_RoleRemove_Broadcast_1151, _is_default_instance_));
  Map_AttrChange_Broadcast_1201_descriptor_ = file->message_type(27);
  static const int Map_AttrChange_Broadcast_1201_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_AttrChange_Broadcast_1201, attrs_),
  };
  Map_AttrChange_Broadcast_1201_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Map_AttrChange_Broadcast_1201_descriptor_,
      Map_AttrChange_Broadcast_1201::default_instance_,
      Map_AttrChange_Broadcast_1201_offsets_,
      -1,
      -1,
      -1,
      sizeof(Map_AttrChange_Broadcast_1201),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_AttrChange_Broadcast_1201, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Map_AttrChange_Broadcast_1201, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_map_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Struct_Role_Situation_descriptor_, &Struct_Role_Situation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Struct_Point3D_descriptor_, &Struct_Point3D::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Struct_Attr_descriptor_, &Struct_Attr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Struct_Attr_Basics_descriptor_, &Struct_Attr_Basics::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_EnterMap_Request_1001_descriptor_, &Map_EnterMap_Request_1001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_EnterMap_Response_1001_descriptor_, &Map_EnterMap_Response_1001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_GetTimeGap_Request_1905_descriptor_, &Map_GetTimeGap_Request_1905::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_GetTimeGap_Response_1905_descriptor_, &Map_GetTimeGap_Response_1905::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleMove_Request_1011_descriptor_, &Map_RoleMove_Request_1011::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleMove_Response_1011_descriptor_, &Map_RoleMove_Response_1011::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleStop_Request_1012_descriptor_, &Map_RoleStop_Request_1012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleStop_Response_1012_descriptor_, &Map_RoleStop_Response_1012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleMoveToPosition_Request_1021_descriptor_, &Map_RoleMoveToPosition_Request_1021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleMoveToPosition_Response_1021_descriptor_, &Map_RoleMoveToPosition_Response_1021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_GetAllRole_Request_1061_descriptor_, &Map_GetAllRole_Request_1061::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_GetAllRole_Response_1061_descriptor_, &Map_GetAllRole_Response_1061::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleMoveCheckout_Request_1062_descriptor_, &Map_RoleMoveCheckout_Request_1062::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleMoveCheckout_Response_1062_descriptor_, &Map_RoleMoveCheckout_Response_1062::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RecastSkill_Request_1200_descriptor_, &Map_RecastSkill_Request_1200::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RecastSkill_Response_1200_descriptor_, &Map_RecastSkill_Response_1200::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleGetAttr_Request_1221_descriptor_, &Map_RoleGetAttr_Request_1221::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleGetAttr_Response_1221_descriptor_, &Map_RoleGetAttr_Response_1221::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleEnterMap_Broadcast_1101_descriptor_, &Map_RoleEnterMap_Broadcast_1101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleMove_Broadcast_1111_descriptor_, &Map_RoleMove_Broadcast_1111::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleStop_Broadcast_1112_descriptor_, &Map_RoleStop_Broadcast_1112::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleMoveToPosition_Broadcast_1121_descriptor_, &Map_RoleMoveToPosition_Broadcast_1121::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_RoleRemove_Broadcast_1151_descriptor_, &Map_RoleRemove_Broadcast_1151::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Map_AttrChange_Broadcast_1201_descriptor_, &Map_AttrChange_Broadcast_1201::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_map_2eproto() {
  delete Struct_Role_Situation::default_instance_;
  delete Struct_Role_Situation_reflection_;
  delete Struct_Point3D::default_instance_;
  delete Struct_Point3D_reflection_;
  delete Struct_Attr::default_instance_;
  delete Struct_Attr_reflection_;
  delete Struct_Attr_Basics::default_instance_;
  delete Struct_Attr_Basics_reflection_;
  delete Map_EnterMap_Request_1001::default_instance_;
  delete Map_EnterMap_Request_1001_reflection_;
  delete Map_EnterMap_Response_1001::default_instance_;
  delete Map_EnterMap_Response_1001_reflection_;
  delete Map_GetTimeGap_Request_1905::default_instance_;
  delete Map_GetTimeGap_Request_1905_reflection_;
  delete Map_GetTimeGap_Response_1905::default_instance_;
  delete Map_GetTimeGap_Response_1905_reflection_;
  delete Map_RoleMove_Request_1011::default_instance_;
  delete Map_RoleMove_Request_1011_reflection_;
  delete Map_RoleMove_Response_1011::default_instance_;
  delete Map_RoleMove_Response_1011_reflection_;
  delete Map_RoleStop_Request_1012::default_instance_;
  delete Map_RoleStop_Request_1012_reflection_;
  delete Map_RoleStop_Response_1012::default_instance_;
  delete Map_RoleStop_Response_1012_reflection_;
  delete Map_RoleMoveToPosition_Request_1021::default_instance_;
  delete Map_RoleMoveToPosition_Request_1021_reflection_;
  delete Map_RoleMoveToPosition_Response_1021::default_instance_;
  delete Map_RoleMoveToPosition_Response_1021_reflection_;
  delete Map_GetAllRole_Request_1061::default_instance_;
  delete Map_GetAllRole_Request_1061_reflection_;
  delete Map_GetAllRole_Response_1061::default_instance_;
  delete Map_GetAllRole_Response_1061_reflection_;
  delete Map_RoleMoveCheckout_Request_1062::default_instance_;
  delete Map_RoleMoveCheckout_Request_1062_reflection_;
  delete Map_RoleMoveCheckout_Response_1062::default_instance_;
  delete Map_RoleMoveCheckout_Response_1062_reflection_;
  delete Map_RecastSkill_Request_1200::default_instance_;
  delete Map_RecastSkill_Request_1200_reflection_;
  delete Map_RecastSkill_Response_1200::default_instance_;
  delete Map_RecastSkill_Response_1200_reflection_;
  delete Map_RoleGetAttr_Request_1221::default_instance_;
  delete Map_RoleGetAttr_Request_1221_reflection_;
  delete Map_RoleGetAttr_Response_1221::default_instance_;
  delete Map_RoleGetAttr_Response_1221_reflection_;
  delete Map_RoleEnterMap_Broadcast_1101::default_instance_;
  delete Map_RoleEnterMap_Broadcast_1101_reflection_;
  delete Map_RoleMove_Broadcast_1111::default_instance_;
  delete Map_RoleMove_Broadcast_1111_reflection_;
  delete Map_RoleStop_Broadcast_1112::default_instance_;
  delete Map_RoleStop_Broadcast_1112_reflection_;
  delete Map_RoleMoveToPosition_Broadcast_1121::default_instance_;
  delete Map_RoleMoveToPosition_Broadcast_1121_reflection_;
  delete Map_RoleRemove_Broadcast_1151::default_instance_;
  delete Map_RoleRemove_Broadcast_1151_reflection_;
  delete Map_AttrChange_Broadcast_1201::default_instance_;
  delete Map_AttrChange_Broadcast_1201_reflection_;
}

void protobuf_AddDesc_map_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_map_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tmap.proto\022\003map\"\201\001\n\025Struct_Role_Situati"
    "on\022\017\n\007RoleUid\030\001 \001(\003\022\016\n\006TypeId\030\002 \001(\005\022\r\n\005A"
    "ngle\030\003 \001(\002\022%\n\010NowPoint\030\004 \001(\0132\023.map.Struc"
    "t_Point3D\022\021\n\tSituation\030\005 \001(\005\"1\n\016Struct_P"
    "oint3D\022\t\n\001Z\030\003 \001(\002\022\t\n\001X\030\004 \001(\002\022\t\n\001Y\030\005 \001(\002\""
    "0\n\013Struct_Attr\022\016\n\006attrId\030\001 \001(\005\022\021\n\tattrVa"
    "lue\030\002 \001(\005\"F\n\022Struct_Attr_Basics\022\017\n\007RoleU"
    "id\030\001 \001(\003\022\037\n\005attrs\030\002 \003(\0132\020.map.Struct_Att"
    "r\";\n\031Map_EnterMap_Request_1001\022\r\n\005MapId\030"
    "\001 \001(\005\022\017\n\007RoleUid\030\002 \001(\003\"g\n\032Map_EnterMap_R"
    "esponse_1001\022\021\n\tErrorCode\030\001 \001(\005\022\017\n\007RoleU"
    "id\030\002 \001(\003\022%\n\010NowPoint\030\003 \001(\0132\023.map.Struct_"
    "Point3D\"-\n\033Map_GetTimeGap_Request_1905\022\016"
    "\n\006TimeMs\030\001 \001(\003\".\n\034Map_GetTimeGap_Respons"
    "e_1905\022\016\n\006TimeMs\030\001 \001(\003\"r\n\031Map_RoleMove_R"
    "equest_1011\022\017\n\007RoleUid\030\001 \001(\003\022\016\n\006TimeMs\030\002"
    " \001(\003\022\r\n\005Angle\030\003 \001(\002\022%\n\010NowPoint\030\004 \001(\0132\023."
    "map.Struct_Point3D\"@\n\032Map_RoleMove_Respo"
    "nse_1011\022\021\n\tErrorCode\030\001 \001(\005\022\017\n\007RoleUid\030\002"
    " \001(\003\"r\n\031Map_RoleStop_Request_1012\022\017\n\007Rol"
    "eUid\030\001 \001(\003\022\016\n\006TimeMs\030\002 \001(\003\022\r\n\005Angle\030\003 \001("
    "\002\022%\n\010NowPoint\030\004 \001(\0132\023.map.Struct_Point3D"
    "\"g\n\032Map_RoleStop_Response_1012\022\021\n\tErrorC"
    "ode\030\001 \001(\005\022\017\n\007RoleUid\030\002 \001(\003\022%\n\010NowPoint\030\003"
    " \001(\0132\023.map.Struct_Point3D\"o\n#Map_RoleMov"
    "eToPosition_Request_1021\022\017\n\007RoleUid\030\001 \001("
    "\003\022\016\n\006TimeMs\030\002 \001(\003\022\'\n\nToPosition\030\003 \003(\0132\023."
    "map.Struct_Point3D\"J\n$Map_RoleMoveToPosi"
    "tion_Response_1021\022\021\n\tErrorCode\030\001 \001(\005\022\017\n"
    "\007RoleUid\030\002 \001(\003\".\n\033Map_GetAllRole_Request"
    "_1061\022\017\n\007RoleUid\030\001 \001(\003\"b\n\034Map_GetAllRole"
    "_Response_1061\022\021\n\tErrorCode\030\001 \001(\005\022/\n\013Rol"
    "eMessage\030\002 \003(\0132\032.map.Struct_Role_Situati"
    "on\"k\n!Map_RoleMoveCheckout_Request_1062\022"
    "\017\n\007RoleUid\030\001 \001(\003\022\016\n\006TimeMs\030\002 \001(\003\022%\n\010NowP"
    "oint\030\003 \001(\0132\023.map.Struct_Point3D\"l\n\"Map_R"
    "oleMoveCheckout_Response_1062\022\017\n\007RoleUid"
    "\030\001 \001(\003\022\016\n\006TimeMs\030\002 \001(\003\022%\n\010NowPoint\030\003 \001(\013"
    "2\023.map.Struct_Point3D\"S\n\034Map_RecastSkill"
    "_Request_1200\022\017\n\007SkillID\030\001 \001(\005\022\017\n\007RoleUi"
    "d\030\002 \001(\003\022\021\n\tTargetUid\030\003 \001(\003\"2\n\035Map_Recast"
    "Skill_Response_1200\022\021\n\tErrorCode\030\001 \001(\005\"\?"
    "\n\034Map_RoleGetAttr_Request_1221\022\017\n\007RoleUi"
    "d\030\001 \001(\003\022\016\n\006attrId\030\002 \003(\005\"Z\n\035Map_RoleGetAt"
    "tr_Response_1221\022\021\n\tErrorCode\030\001 \001(\005\022&\n\005a"
    "ttrs\030\002 \001(\0132\027.map.Struct_Attr_Basics\"h\n\037M"
    "ap_RoleEnterMap_Broadcast_1101\022\017\n\007RoleUi"
    "d\030\001 \001(\003\022\r\n\005Angle\030\002 \001(\002\022%\n\010NowPoint\030\003 \001(\013"
    "2\023.map.Struct_Point3D\"t\n\033Map_RoleMove_Br"
    "oadcast_1111\022\017\n\007RoleUid\030\001 \001(\003\022\016\n\006TimeMs\030"
    "\002 \001(\003\022\r\n\005Angle\030\003 \001(\002\022%\n\010NowPoint\030\004 \001(\0132\023"
    ".map.Struct_Point3D\"d\n\033Map_RoleStop_Broa"
    "dcast_1112\022\017\n\007RoleUid\030\001 \001(\003\022\r\n\005Angle\030\002 \001"
    "(\002\022%\n\010NowPoint\030\003 \001(\0132\023.map.Struct_Point3"
    "D\"\235\001\n%Map_RoleMoveToPosition_Broadcast_1"
    "121\022\017\n\007RoleUid\030\001 \001(\003\022\016\n\006TimeMs\030\002 \001(\003\022*\n\r"
    "StartPosition\030\003 \001(\0132\023.map.Struct_Point3D"
    "\022\'\n\nToPosition\030\004 \001(\0132\023.map.Struct_Point3"
    "D\"0\n\035Map_RoleRemove_Broadcast_1151\022\017\n\007Ro"
    "leUid\030\001 \001(\003\"G\n\035Map_AttrChange_Broadcast_"
    "1201\022&\n\005attrs\030\001 \001(\0132\027.map.Struct_Attr_Ba"
    "sicsb\006proto3", 2452);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "map.proto", &protobuf_RegisterTypes);
  Struct_Role_Situation::default_instance_ = new Struct_Role_Situation();
  Struct_Point3D::default_instance_ = new Struct_Point3D();
  Struct_Attr::default_instance_ = new Struct_Attr();
  Struct_Attr_Basics::default_instance_ = new Struct_Attr_Basics();
  Map_EnterMap_Request_1001::default_instance_ = new Map_EnterMap_Request_1001();
  Map_EnterMap_Response_1001::default_instance_ = new Map_EnterMap_Response_1001();
  Map_GetTimeGap_Request_1905::default_instance_ = new Map_GetTimeGap_Request_1905();
  Map_GetTimeGap_Response_1905::default_instance_ = new Map_GetTimeGap_Response_1905();
  Map_RoleMove_Request_1011::default_instance_ = new Map_RoleMove_Request_1011();
  Map_RoleMove_Response_1011::default_instance_ = new Map_RoleMove_Response_1011();
  Map_RoleStop_Request_1012::default_instance_ = new Map_RoleStop_Request_1012();
  Map_RoleStop_Response_1012::default_instance_ = new Map_RoleStop_Response_1012();
  Map_RoleMoveToPosition_Request_1021::default_instance_ = new Map_RoleMoveToPosition_Request_1021();
  Map_RoleMoveToPosition_Response_1021::default_instance_ = new Map_RoleMoveToPosition_Response_1021();
  Map_GetAllRole_Request_1061::default_instance_ = new Map_GetAllRole_Request_1061();
  Map_GetAllRole_Response_1061::default_instance_ = new Map_GetAllRole_Response_1061();
  Map_RoleMoveCheckout_Request_1062::default_instance_ = new Map_RoleMoveCheckout_Request_1062();
  Map_RoleMoveCheckout_Response_1062::default_instance_ = new Map_RoleMoveCheckout_Response_1062();
  Map_RecastSkill_Request_1200::default_instance_ = new Map_RecastSkill_Request_1200();
  Map_RecastSkill_Response_1200::default_instance_ = new Map_RecastSkill_Response_1200();
  Map_RoleGetAttr_Request_1221::default_instance_ = new Map_RoleGetAttr_Request_1221();
  Map_RoleGetAttr_Response_1221::default_instance_ = new Map_RoleGetAttr_Response_1221();
  Map_RoleEnterMap_Broadcast_1101::default_instance_ = new Map_RoleEnterMap_Broadcast_1101();
  Map_RoleMove_Broadcast_1111::default_instance_ = new Map_RoleMove_Broadcast_1111();
  Map_RoleStop_Broadcast_1112::default_instance_ = new Map_RoleStop_Broadcast_1112();
  Map_RoleMoveToPosition_Broadcast_1121::default_instance_ = new Map_RoleMoveToPosition_Broadcast_1121();
  Map_RoleRemove_Broadcast_1151::default_instance_ = new Map_RoleRemove_Broadcast_1151();
  Map_AttrChange_Broadcast_1201::default_instance_ = new Map_AttrChange_Broadcast_1201();
  Struct_Role_Situation::default_instance_->InitAsDefaultInstance();
  Struct_Point3D::default_instance_->InitAsDefaultInstance();
  Struct_Attr::default_instance_->InitAsDefaultInstance();
  Struct_Attr_Basics::default_instance_->InitAsDefaultInstance();
  Map_EnterMap_Request_1001::default_instance_->InitAsDefaultInstance();
  Map_EnterMap_Response_1001::default_instance_->InitAsDefaultInstance();
  Map_GetTimeGap_Request_1905::default_instance_->InitAsDefaultInstance();
  Map_GetTimeGap_Response_1905::default_instance_->InitAsDefaultInstance();
  Map_RoleMove_Request_1011::default_instance_->InitAsDefaultInstance();
  Map_RoleMove_Response_1011::default_instance_->InitAsDefaultInstance();
  Map_RoleStop_Request_1012::default_instance_->InitAsDefaultInstance();
  Map_RoleStop_Response_1012::default_instance_->InitAsDefaultInstance();
  Map_RoleMoveToPosition_Request_1021::default_instance_->InitAsDefaultInstance();
  Map_RoleMoveToPosition_Response_1021::default_instance_->InitAsDefaultInstance();
  Map_GetAllRole_Request_1061::default_instance_->InitAsDefaultInstance();
  Map_GetAllRole_Response_1061::default_instance_->InitAsDefaultInstance();
  Map_RoleMoveCheckout_Request_1062::default_instance_->InitAsDefaultInstance();
  Map_RoleMoveCheckout_Response_1062::default_instance_->InitAsDefaultInstance();
  Map_RecastSkill_Request_1200::default_instance_->InitAsDefaultInstance();
  Map_RecastSkill_Response_1200::default_instance_->InitAsDefaultInstance();
  Map_RoleGetAttr_Request_1221::default_instance_->InitAsDefaultInstance();
  Map_RoleGetAttr_Response_1221::default_instance_->InitAsDefaultInstance();
  Map_RoleEnterMap_Broadcast_1101::default_instance_->InitAsDefaultInstance();
  Map_RoleMove_Broadcast_1111::default_instance_->InitAsDefaultInstance();
  Map_RoleStop_Broadcast_1112::default_instance_->InitAsDefaultInstance();
  Map_RoleMoveToPosition_Broadcast_1121::default_instance_->InitAsDefaultInstance();
  Map_RoleRemove_Broadcast_1151::default_instance_->InitAsDefaultInstance();
  Map_AttrChange_Broadcast_1201::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_map_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_map_2eproto {
  StaticDescriptorInitializer_map_2eproto() {
    protobuf_AddDesc_map_2eproto();
  }
} static_descriptor_initializer_map_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Struct_Role_Situation::kRoleUidFieldNumber;
const int Struct_Role_Situation::kTypeIdFieldNumber;
const int Struct_Role_Situation::kAngleFieldNumber;
const int Struct_Role_Situation::kNowPointFieldNumber;
const int Struct_Role_Situation::kSituationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Struct_Role_Situation::Struct_Role_Situation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Struct_Role_Situation)
}

void Struct_Role_Situation::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nowpoint_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Struct_Role_Situation::Struct_Role_Situation(const Struct_Role_Situation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Struct_Role_Situation)
}

void Struct_Role_Situation::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  typeid__ = 0;
  angle_ = 0;
  nowpoint_ = NULL;
  situation_ = 0;
}

Struct_Role_Situation::~Struct_Role_Situation() {
  // @@protoc_insertion_point(destructor:map.Struct_Role_Situation)
  SharedDtor();
}

void Struct_Role_Situation::SharedDtor() {
  if (this != default_instance_) {
    delete nowpoint_;
  }
}

void Struct_Role_Situation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Struct_Role_Situation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Struct_Role_Situation_descriptor_;
}

const Struct_Role_Situation& Struct_Role_Situation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Struct_Role_Situation* Struct_Role_Situation::default_instance_ = NULL;

Struct_Role_Situation* Struct_Role_Situation::New(::google::protobuf::Arena* arena) const {
  Struct_Role_Situation* n = new Struct_Role_Situation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Struct_Role_Situation::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Struct_Role_Situation)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Struct_Role_Situation, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Struct_Role_Situation*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, angle_);
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
  situation_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool Struct_Role_Situation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Struct_Role_Situation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TypeId;
        break;
      }

      // optional int32 TypeId = 2;
      case 2: {
        if (tag == 16) {
         parse_TypeId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typeid__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_Angle;
        break;
      }

      // optional float Angle = 3;
      case 3: {
        if (tag == 29) {
         parse_Angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_NowPoint;
        break;
      }

      // optional .map.Struct_Point3D NowPoint = 4;
      case 4: {
        if (tag == 34) {
         parse_NowPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nowpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Situation;
        break;
      }

      // optional int32 Situation = 5;
      case 5: {
        if (tag == 40) {
         parse_Situation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &situation_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Struct_Role_Situation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Struct_Role_Situation)
  return false;
#undef DO_
}

void Struct_Role_Situation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Struct_Role_Situation)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // optional int32 TypeId = 2;
  if (this->typeid_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->typeid_(), output);
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle(), output);
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->nowpoint_, output);
  }

  // optional int32 Situation = 5;
  if (this->situation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->situation(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Struct_Role_Situation)
}

::google::protobuf::uint8* Struct_Role_Situation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Struct_Role_Situation)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // optional int32 TypeId = 2;
  if (this->typeid_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->typeid_(), target);
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle(), target);
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->nowpoint_, false, target);
  }

  // optional int32 Situation = 5;
  if (this->situation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->situation(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Struct_Role_Situation)
  return target;
}

int Struct_Role_Situation::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Struct_Role_Situation)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional int32 TypeId = 2;
  if (this->typeid_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->typeid_());
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nowpoint_);
  }

  // optional int32 Situation = 5;
  if (this->situation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->situation());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Struct_Role_Situation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Struct_Role_Situation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Struct_Role_Situation* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Struct_Role_Situation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Struct_Role_Situation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Struct_Role_Situation)
    MergeFrom(*source);
  }
}

void Struct_Role_Situation::MergeFrom(const Struct_Role_Situation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Struct_Role_Situation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.typeid_() != 0) {
    set_typeid_(from.typeid_());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.has_nowpoint()) {
    mutable_nowpoint()->::map::Struct_Point3D::MergeFrom(from.nowpoint());
  }
  if (from.situation() != 0) {
    set_situation(from.situation());
  }
}

void Struct_Role_Situation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Struct_Role_Situation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Struct_Role_Situation::CopyFrom(const Struct_Role_Situation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Struct_Role_Situation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Struct_Role_Situation::IsInitialized() const {

  return true;
}

void Struct_Role_Situation::Swap(Struct_Role_Situation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Struct_Role_Situation::InternalSwap(Struct_Role_Situation* other) {
  std::swap(roleuid_, other->roleuid_);
  std::swap(typeid__, other->typeid__);
  std::swap(angle_, other->angle_);
  std::swap(nowpoint_, other->nowpoint_);
  std::swap(situation_, other->situation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Struct_Role_Situation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Struct_Role_Situation_descriptor_;
  metadata.reflection = Struct_Role_Situation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Struct_Role_Situation

// optional int64 RoleUid = 1;
void Struct_Role_Situation::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Struct_Role_Situation::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Struct_Role_Situation.RoleUid)
  return roleuid_;
}
 void Struct_Role_Situation::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Struct_Role_Situation.RoleUid)
}

// optional int32 TypeId = 2;
void Struct_Role_Situation::clear_typeid_() {
  typeid__ = 0;
}
 ::google::protobuf::int32 Struct_Role_Situation::typeid_() const {
  // @@protoc_insertion_point(field_get:map.Struct_Role_Situation.TypeId)
  return typeid__;
}
 void Struct_Role_Situation::set_typeid_(::google::protobuf::int32 value) {
  
  typeid__ = value;
  // @@protoc_insertion_point(field_set:map.Struct_Role_Situation.TypeId)
}

// optional float Angle = 3;
void Struct_Role_Situation::clear_angle() {
  angle_ = 0;
}
 float Struct_Role_Situation::angle() const {
  // @@protoc_insertion_point(field_get:map.Struct_Role_Situation.Angle)
  return angle_;
}
 void Struct_Role_Situation::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:map.Struct_Role_Situation.Angle)
}

// optional .map.Struct_Point3D NowPoint = 4;
bool Struct_Role_Situation::has_nowpoint() const {
  return !_is_default_instance_ && nowpoint_ != NULL;
}
void Struct_Role_Situation::clear_nowpoint() {
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}
const ::map::Struct_Point3D& Struct_Role_Situation::nowpoint() const {
  // @@protoc_insertion_point(field_get:map.Struct_Role_Situation.NowPoint)
  return nowpoint_ != NULL ? *nowpoint_ : *default_instance_->nowpoint_;
}
::map::Struct_Point3D* Struct_Role_Situation::mutable_nowpoint() {
  
  if (nowpoint_ == NULL) {
    nowpoint_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Struct_Role_Situation.NowPoint)
  return nowpoint_;
}
::map::Struct_Point3D* Struct_Role_Situation::release_nowpoint() {
  // @@protoc_insertion_point(field_release:map.Struct_Role_Situation.NowPoint)
  
  ::map::Struct_Point3D* temp = nowpoint_;
  nowpoint_ = NULL;
  return temp;
}
void Struct_Role_Situation::set_allocated_nowpoint(::map::Struct_Point3D* nowpoint) {
  delete nowpoint_;
  nowpoint_ = nowpoint;
  if (nowpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Struct_Role_Situation.NowPoint)
}

// optional int32 Situation = 5;
void Struct_Role_Situation::clear_situation() {
  situation_ = 0;
}
 ::google::protobuf::int32 Struct_Role_Situation::situation() const {
  // @@protoc_insertion_point(field_get:map.Struct_Role_Situation.Situation)
  return situation_;
}
 void Struct_Role_Situation::set_situation(::google::protobuf::int32 value) {
  
  situation_ = value;
  // @@protoc_insertion_point(field_set:map.Struct_Role_Situation.Situation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Struct_Point3D::kZFieldNumber;
const int Struct_Point3D::kXFieldNumber;
const int Struct_Point3D::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Struct_Point3D::Struct_Point3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Struct_Point3D)
}

void Struct_Point3D::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Struct_Point3D::Struct_Point3D(const Struct_Point3D& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Struct_Point3D)
}

void Struct_Point3D::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  z_ = 0;
  x_ = 0;
  y_ = 0;
}

Struct_Point3D::~Struct_Point3D() {
  // @@protoc_insertion_point(destructor:map.Struct_Point3D)
  SharedDtor();
}

void Struct_Point3D::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Struct_Point3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Struct_Point3D::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Struct_Point3D_descriptor_;
}

const Struct_Point3D& Struct_Point3D::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Struct_Point3D* Struct_Point3D::default_instance_ = NULL;

Struct_Point3D* Struct_Point3D::New(::google::protobuf::Arena* arena) const {
  Struct_Point3D* n = new Struct_Point3D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Struct_Point3D::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Struct_Point3D)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Struct_Point3D, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Struct_Point3D*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(z_, y_);

#undef ZR_HELPER_
#undef ZR_

}

bool Struct_Point3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Struct_Point3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float Z = 3;
      case 3: {
        if (tag == 29) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_X;
        break;
      }

      // optional float X = 4;
      case 4: {
        if (tag == 37) {
         parse_X:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_Y;
        break;
      }

      // optional float Y = 5;
      case 5: {
        if (tag == 45) {
         parse_Y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Struct_Point3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Struct_Point3D)
  return false;
#undef DO_
}

void Struct_Point3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Struct_Point3D)
  // optional float Z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // optional float X = 4;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->x(), output);
  }

  // optional float Y = 5;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->y(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Struct_Point3D)
}

::google::protobuf::uint8* Struct_Point3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Struct_Point3D)
  // optional float Z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // optional float X = 4;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->x(), target);
  }

  // optional float Y = 5;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->y(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Struct_Point3D)
  return target;
}

int Struct_Point3D::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Struct_Point3D)
  int total_size = 0;

  // optional float Z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // optional float X = 4;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float Y = 5;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Struct_Point3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Struct_Point3D)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Struct_Point3D* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Struct_Point3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Struct_Point3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Struct_Point3D)
    MergeFrom(*source);
  }
}

void Struct_Point3D::MergeFrom(const Struct_Point3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Struct_Point3D)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Struct_Point3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Struct_Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Struct_Point3D::CopyFrom(const Struct_Point3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Struct_Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Struct_Point3D::IsInitialized() const {

  return true;
}

void Struct_Point3D::Swap(Struct_Point3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Struct_Point3D::InternalSwap(Struct_Point3D* other) {
  std::swap(z_, other->z_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Struct_Point3D::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Struct_Point3D_descriptor_;
  metadata.reflection = Struct_Point3D_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Struct_Point3D

// optional float Z = 3;
void Struct_Point3D::clear_z() {
  z_ = 0;
}
 float Struct_Point3D::z() const {
  // @@protoc_insertion_point(field_get:map.Struct_Point3D.Z)
  return z_;
}
 void Struct_Point3D::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:map.Struct_Point3D.Z)
}

// optional float X = 4;
void Struct_Point3D::clear_x() {
  x_ = 0;
}
 float Struct_Point3D::x() const {
  // @@protoc_insertion_point(field_get:map.Struct_Point3D.X)
  return x_;
}
 void Struct_Point3D::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:map.Struct_Point3D.X)
}

// optional float Y = 5;
void Struct_Point3D::clear_y() {
  y_ = 0;
}
 float Struct_Point3D::y() const {
  // @@protoc_insertion_point(field_get:map.Struct_Point3D.Y)
  return y_;
}
 void Struct_Point3D::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:map.Struct_Point3D.Y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Struct_Attr::kAttrIdFieldNumber;
const int Struct_Attr::kAttrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Struct_Attr::Struct_Attr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Struct_Attr)
}

void Struct_Attr::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Struct_Attr::Struct_Attr(const Struct_Attr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Struct_Attr)
}

void Struct_Attr::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  attrid_ = 0;
  attrvalue_ = 0;
}

Struct_Attr::~Struct_Attr() {
  // @@protoc_insertion_point(destructor:map.Struct_Attr)
  SharedDtor();
}

void Struct_Attr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Struct_Attr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Struct_Attr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Struct_Attr_descriptor_;
}

const Struct_Attr& Struct_Attr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Struct_Attr* Struct_Attr::default_instance_ = NULL;

Struct_Attr* Struct_Attr::New(::google::protobuf::Arena* arena) const {
  Struct_Attr* n = new Struct_Attr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Struct_Attr::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Struct_Attr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Struct_Attr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Struct_Attr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(attrid_, attrvalue_);

#undef ZR_HELPER_
#undef ZR_

}

bool Struct_Attr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Struct_Attr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 attrId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attrid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_attrValue;
        break;
      }

      // optional int32 attrValue = 2;
      case 2: {
        if (tag == 16) {
         parse_attrValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attrvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Struct_Attr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Struct_Attr)
  return false;
#undef DO_
}

void Struct_Attr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Struct_Attr)
  // optional int32 attrId = 1;
  if (this->attrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attrid(), output);
  }

  // optional int32 attrValue = 2;
  if (this->attrvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->attrvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Struct_Attr)
}

::google::protobuf::uint8* Struct_Attr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Struct_Attr)
  // optional int32 attrId = 1;
  if (this->attrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attrid(), target);
  }

  // optional int32 attrValue = 2;
  if (this->attrvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->attrvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Struct_Attr)
  return target;
}

int Struct_Attr::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Struct_Attr)
  int total_size = 0;

  // optional int32 attrId = 1;
  if (this->attrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attrid());
  }

  // optional int32 attrValue = 2;
  if (this->attrvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attrvalue());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Struct_Attr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Struct_Attr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Struct_Attr* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Struct_Attr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Struct_Attr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Struct_Attr)
    MergeFrom(*source);
  }
}

void Struct_Attr::MergeFrom(const Struct_Attr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Struct_Attr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.attrid() != 0) {
    set_attrid(from.attrid());
  }
  if (from.attrvalue() != 0) {
    set_attrvalue(from.attrvalue());
  }
}

void Struct_Attr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Struct_Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Struct_Attr::CopyFrom(const Struct_Attr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Struct_Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Struct_Attr::IsInitialized() const {

  return true;
}

void Struct_Attr::Swap(Struct_Attr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Struct_Attr::InternalSwap(Struct_Attr* other) {
  std::swap(attrid_, other->attrid_);
  std::swap(attrvalue_, other->attrvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Struct_Attr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Struct_Attr_descriptor_;
  metadata.reflection = Struct_Attr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Struct_Attr

// optional int32 attrId = 1;
void Struct_Attr::clear_attrid() {
  attrid_ = 0;
}
 ::google::protobuf::int32 Struct_Attr::attrid() const {
  // @@protoc_insertion_point(field_get:map.Struct_Attr.attrId)
  return attrid_;
}
 void Struct_Attr::set_attrid(::google::protobuf::int32 value) {
  
  attrid_ = value;
  // @@protoc_insertion_point(field_set:map.Struct_Attr.attrId)
}

// optional int32 attrValue = 2;
void Struct_Attr::clear_attrvalue() {
  attrvalue_ = 0;
}
 ::google::protobuf::int32 Struct_Attr::attrvalue() const {
  // @@protoc_insertion_point(field_get:map.Struct_Attr.attrValue)
  return attrvalue_;
}
 void Struct_Attr::set_attrvalue(::google::protobuf::int32 value) {
  
  attrvalue_ = value;
  // @@protoc_insertion_point(field_set:map.Struct_Attr.attrValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Struct_Attr_Basics::kRoleUidFieldNumber;
const int Struct_Attr_Basics::kAttrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Struct_Attr_Basics::Struct_Attr_Basics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Struct_Attr_Basics)
}

void Struct_Attr_Basics::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Struct_Attr_Basics::Struct_Attr_Basics(const Struct_Attr_Basics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Struct_Attr_Basics)
}

void Struct_Attr_Basics::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
}

Struct_Attr_Basics::~Struct_Attr_Basics() {
  // @@protoc_insertion_point(destructor:map.Struct_Attr_Basics)
  SharedDtor();
}

void Struct_Attr_Basics::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Struct_Attr_Basics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Struct_Attr_Basics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Struct_Attr_Basics_descriptor_;
}

const Struct_Attr_Basics& Struct_Attr_Basics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Struct_Attr_Basics* Struct_Attr_Basics::default_instance_ = NULL;

Struct_Attr_Basics* Struct_Attr_Basics::New(::google::protobuf::Arena* arena) const {
  Struct_Attr_Basics* n = new Struct_Attr_Basics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Struct_Attr_Basics::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Struct_Attr_Basics)
  roleuid_ = GOOGLE_LONGLONG(0);
  attrs_.Clear();
}

bool Struct_Attr_Basics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Struct_Attr_Basics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attrs;
        break;
      }

      // repeated .map.Struct_Attr attrs = 2;
      case 2: {
        if (tag == 18) {
         parse_attrs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_attrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_attrs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Struct_Attr_Basics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Struct_Attr_Basics)
  return false;
#undef DO_
}

void Struct_Attr_Basics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Struct_Attr_Basics)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // repeated .map.Struct_Attr attrs = 2;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attrs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Struct_Attr_Basics)
}

::google::protobuf::uint8* Struct_Attr_Basics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Struct_Attr_Basics)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // repeated .map.Struct_Attr attrs = 2;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->attrs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Struct_Attr_Basics)
  return target;
}

int Struct_Attr_Basics::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Struct_Attr_Basics)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // repeated .map.Struct_Attr attrs = 2;
  total_size += 1 * this->attrs_size();
  for (int i = 0; i < this->attrs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attrs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Struct_Attr_Basics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Struct_Attr_Basics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Struct_Attr_Basics* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Struct_Attr_Basics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Struct_Attr_Basics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Struct_Attr_Basics)
    MergeFrom(*source);
  }
}

void Struct_Attr_Basics::MergeFrom(const Struct_Attr_Basics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Struct_Attr_Basics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  attrs_.MergeFrom(from.attrs_);
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
}

void Struct_Attr_Basics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Struct_Attr_Basics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Struct_Attr_Basics::CopyFrom(const Struct_Attr_Basics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Struct_Attr_Basics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Struct_Attr_Basics::IsInitialized() const {

  return true;
}

void Struct_Attr_Basics::Swap(Struct_Attr_Basics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Struct_Attr_Basics::InternalSwap(Struct_Attr_Basics* other) {
  std::swap(roleuid_, other->roleuid_);
  attrs_.UnsafeArenaSwap(&other->attrs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Struct_Attr_Basics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Struct_Attr_Basics_descriptor_;
  metadata.reflection = Struct_Attr_Basics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Struct_Attr_Basics

// optional int64 RoleUid = 1;
void Struct_Attr_Basics::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Struct_Attr_Basics::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Struct_Attr_Basics.RoleUid)
  return roleuid_;
}
 void Struct_Attr_Basics::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Struct_Attr_Basics.RoleUid)
}

// repeated .map.Struct_Attr attrs = 2;
int Struct_Attr_Basics::attrs_size() const {
  return attrs_.size();
}
void Struct_Attr_Basics::clear_attrs() {
  attrs_.Clear();
}
const ::map::Struct_Attr& Struct_Attr_Basics::attrs(int index) const {
  // @@protoc_insertion_point(field_get:map.Struct_Attr_Basics.attrs)
  return attrs_.Get(index);
}
::map::Struct_Attr* Struct_Attr_Basics::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:map.Struct_Attr_Basics.attrs)
  return attrs_.Mutable(index);
}
::map::Struct_Attr* Struct_Attr_Basics::add_attrs() {
  // @@protoc_insertion_point(field_add:map.Struct_Attr_Basics.attrs)
  return attrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::map::Struct_Attr >*
Struct_Attr_Basics::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:map.Struct_Attr_Basics.attrs)
  return &attrs_;
}
const ::google::protobuf::RepeatedPtrField< ::map::Struct_Attr >&
Struct_Attr_Basics::attrs() const {
  // @@protoc_insertion_point(field_list:map.Struct_Attr_Basics.attrs)
  return attrs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_EnterMap_Request_1001::kMapIdFieldNumber;
const int Map_EnterMap_Request_1001::kRoleUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_EnterMap_Request_1001::Map_EnterMap_Request_1001()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_EnterMap_Request_1001)
}

void Map_EnterMap_Request_1001::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_EnterMap_Request_1001::Map_EnterMap_Request_1001(const Map_EnterMap_Request_1001& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_EnterMap_Request_1001)
}

void Map_EnterMap_Request_1001::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mapid_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
}

Map_EnterMap_Request_1001::~Map_EnterMap_Request_1001() {
  // @@protoc_insertion_point(destructor:map.Map_EnterMap_Request_1001)
  SharedDtor();
}

void Map_EnterMap_Request_1001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_EnterMap_Request_1001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_EnterMap_Request_1001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_EnterMap_Request_1001_descriptor_;
}

const Map_EnterMap_Request_1001& Map_EnterMap_Request_1001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_EnterMap_Request_1001* Map_EnterMap_Request_1001::default_instance_ = NULL;

Map_EnterMap_Request_1001* Map_EnterMap_Request_1001::New(::google::protobuf::Arena* arena) const {
  Map_EnterMap_Request_1001* n = new Map_EnterMap_Request_1001;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_EnterMap_Request_1001::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_EnterMap_Request_1001)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_EnterMap_Request_1001, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_EnterMap_Request_1001*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, mapid_);

#undef ZR_HELPER_
#undef ZR_

}

bool Map_EnterMap_Request_1001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_EnterMap_Request_1001)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleUid;
        break;
      }

      // optional int64 RoleUid = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_EnterMap_Request_1001)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_EnterMap_Request_1001)
  return false;
#undef DO_
}

void Map_EnterMap_Request_1001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_EnterMap_Request_1001)
  // optional int32 MapId = 1;
  if (this->mapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mapid(), output);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_EnterMap_Request_1001)
}

::google::protobuf::uint8* Map_EnterMap_Request_1001::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_EnterMap_Request_1001)
  // optional int32 MapId = 1;
  if (this->mapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mapid(), target);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_EnterMap_Request_1001)
  return target;
}

int Map_EnterMap_Request_1001::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_EnterMap_Request_1001)
  int total_size = 0;

  // optional int32 MapId = 1;
  if (this->mapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mapid());
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_EnterMap_Request_1001::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_EnterMap_Request_1001)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_EnterMap_Request_1001* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_EnterMap_Request_1001>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_EnterMap_Request_1001)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_EnterMap_Request_1001)
    MergeFrom(*source);
  }
}

void Map_EnterMap_Request_1001::MergeFrom(const Map_EnterMap_Request_1001& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_EnterMap_Request_1001)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.mapid() != 0) {
    set_mapid(from.mapid());
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
}

void Map_EnterMap_Request_1001::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_EnterMap_Request_1001)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_EnterMap_Request_1001::CopyFrom(const Map_EnterMap_Request_1001& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_EnterMap_Request_1001)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_EnterMap_Request_1001::IsInitialized() const {

  return true;
}

void Map_EnterMap_Request_1001::Swap(Map_EnterMap_Request_1001* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_EnterMap_Request_1001::InternalSwap(Map_EnterMap_Request_1001* other) {
  std::swap(mapid_, other->mapid_);
  std::swap(roleuid_, other->roleuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_EnterMap_Request_1001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_EnterMap_Request_1001_descriptor_;
  metadata.reflection = Map_EnterMap_Request_1001_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_EnterMap_Request_1001

// optional int32 MapId = 1;
void Map_EnterMap_Request_1001::clear_mapid() {
  mapid_ = 0;
}
 ::google::protobuf::int32 Map_EnterMap_Request_1001::mapid() const {
  // @@protoc_insertion_point(field_get:map.Map_EnterMap_Request_1001.MapId)
  return mapid_;
}
 void Map_EnterMap_Request_1001::set_mapid(::google::protobuf::int32 value) {
  
  mapid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_EnterMap_Request_1001.MapId)
}

// optional int64 RoleUid = 2;
void Map_EnterMap_Request_1001::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_EnterMap_Request_1001::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_EnterMap_Request_1001.RoleUid)
  return roleuid_;
}
 void Map_EnterMap_Request_1001::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_EnterMap_Request_1001.RoleUid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_EnterMap_Response_1001::kErrorCodeFieldNumber;
const int Map_EnterMap_Response_1001::kRoleUidFieldNumber;
const int Map_EnterMap_Response_1001::kNowPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_EnterMap_Response_1001::Map_EnterMap_Response_1001()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_EnterMap_Response_1001)
}

void Map_EnterMap_Response_1001::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nowpoint_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Map_EnterMap_Response_1001::Map_EnterMap_Response_1001(const Map_EnterMap_Response_1001& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_EnterMap_Response_1001)
}

void Map_EnterMap_Response_1001::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errorcode_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  nowpoint_ = NULL;
}

Map_EnterMap_Response_1001::~Map_EnterMap_Response_1001() {
  // @@protoc_insertion_point(destructor:map.Map_EnterMap_Response_1001)
  SharedDtor();
}

void Map_EnterMap_Response_1001::SharedDtor() {
  if (this != default_instance_) {
    delete nowpoint_;
  }
}

void Map_EnterMap_Response_1001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_EnterMap_Response_1001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_EnterMap_Response_1001_descriptor_;
}

const Map_EnterMap_Response_1001& Map_EnterMap_Response_1001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_EnterMap_Response_1001* Map_EnterMap_Response_1001::default_instance_ = NULL;

Map_EnterMap_Response_1001* Map_EnterMap_Response_1001::New(::google::protobuf::Arena* arena) const {
  Map_EnterMap_Response_1001* n = new Map_EnterMap_Response_1001;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_EnterMap_Response_1001::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_EnterMap_Response_1001)
  errorcode_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}

bool Map_EnterMap_Response_1001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_EnterMap_Response_1001)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ErrorCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleUid;
        break;
      }

      // optional int64 RoleUid = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_NowPoint;
        break;
      }

      // optional .map.Struct_Point3D NowPoint = 3;
      case 3: {
        if (tag == 26) {
         parse_NowPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nowpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_EnterMap_Response_1001)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_EnterMap_Response_1001)
  return false;
#undef DO_
}

void Map_EnterMap_Response_1001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_EnterMap_Response_1001)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleuid(), output);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->nowpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_EnterMap_Response_1001)
}

::google::protobuf::uint8* Map_EnterMap_Response_1001::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_EnterMap_Response_1001)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleuid(), target);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->nowpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_EnterMap_Response_1001)
  return target;
}

int Map_EnterMap_Response_1001::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_EnterMap_Response_1001)
  int total_size = 0;

  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nowpoint_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_EnterMap_Response_1001::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_EnterMap_Response_1001)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_EnterMap_Response_1001* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_EnterMap_Response_1001>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_EnterMap_Response_1001)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_EnterMap_Response_1001)
    MergeFrom(*source);
  }
}

void Map_EnterMap_Response_1001::MergeFrom(const Map_EnterMap_Response_1001& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_EnterMap_Response_1001)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.has_nowpoint()) {
    mutable_nowpoint()->::map::Struct_Point3D::MergeFrom(from.nowpoint());
  }
}

void Map_EnterMap_Response_1001::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_EnterMap_Response_1001)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_EnterMap_Response_1001::CopyFrom(const Map_EnterMap_Response_1001& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_EnterMap_Response_1001)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_EnterMap_Response_1001::IsInitialized() const {

  return true;
}

void Map_EnterMap_Response_1001::Swap(Map_EnterMap_Response_1001* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_EnterMap_Response_1001::InternalSwap(Map_EnterMap_Response_1001* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(roleuid_, other->roleuid_);
  std::swap(nowpoint_, other->nowpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_EnterMap_Response_1001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_EnterMap_Response_1001_descriptor_;
  metadata.reflection = Map_EnterMap_Response_1001_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_EnterMap_Response_1001

// optional int32 ErrorCode = 1;
void Map_EnterMap_Response_1001::clear_errorcode() {
  errorcode_ = 0;
}
 ::google::protobuf::int32 Map_EnterMap_Response_1001::errorcode() const {
  // @@protoc_insertion_point(field_get:map.Map_EnterMap_Response_1001.ErrorCode)
  return errorcode_;
}
 void Map_EnterMap_Response_1001::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:map.Map_EnterMap_Response_1001.ErrorCode)
}

// optional int64 RoleUid = 2;
void Map_EnterMap_Response_1001::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_EnterMap_Response_1001::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_EnterMap_Response_1001.RoleUid)
  return roleuid_;
}
 void Map_EnterMap_Response_1001::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_EnterMap_Response_1001.RoleUid)
}

// optional .map.Struct_Point3D NowPoint = 3;
bool Map_EnterMap_Response_1001::has_nowpoint() const {
  return !_is_default_instance_ && nowpoint_ != NULL;
}
void Map_EnterMap_Response_1001::clear_nowpoint() {
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}
const ::map::Struct_Point3D& Map_EnterMap_Response_1001::nowpoint() const {
  // @@protoc_insertion_point(field_get:map.Map_EnterMap_Response_1001.NowPoint)
  return nowpoint_ != NULL ? *nowpoint_ : *default_instance_->nowpoint_;
}
::map::Struct_Point3D* Map_EnterMap_Response_1001::mutable_nowpoint() {
  
  if (nowpoint_ == NULL) {
    nowpoint_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_EnterMap_Response_1001.NowPoint)
  return nowpoint_;
}
::map::Struct_Point3D* Map_EnterMap_Response_1001::release_nowpoint() {
  // @@protoc_insertion_point(field_release:map.Map_EnterMap_Response_1001.NowPoint)
  
  ::map::Struct_Point3D* temp = nowpoint_;
  nowpoint_ = NULL;
  return temp;
}
void Map_EnterMap_Response_1001::set_allocated_nowpoint(::map::Struct_Point3D* nowpoint) {
  delete nowpoint_;
  nowpoint_ = nowpoint;
  if (nowpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_EnterMap_Response_1001.NowPoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_GetTimeGap_Request_1905::kTimeMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_GetTimeGap_Request_1905::Map_GetTimeGap_Request_1905()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_GetTimeGap_Request_1905)
}

void Map_GetTimeGap_Request_1905::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_GetTimeGap_Request_1905::Map_GetTimeGap_Request_1905(const Map_GetTimeGap_Request_1905& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_GetTimeGap_Request_1905)
}

void Map_GetTimeGap_Request_1905::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timems_ = GOOGLE_LONGLONG(0);
}

Map_GetTimeGap_Request_1905::~Map_GetTimeGap_Request_1905() {
  // @@protoc_insertion_point(destructor:map.Map_GetTimeGap_Request_1905)
  SharedDtor();
}

void Map_GetTimeGap_Request_1905::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_GetTimeGap_Request_1905::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_GetTimeGap_Request_1905::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_GetTimeGap_Request_1905_descriptor_;
}

const Map_GetTimeGap_Request_1905& Map_GetTimeGap_Request_1905::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_GetTimeGap_Request_1905* Map_GetTimeGap_Request_1905::default_instance_ = NULL;

Map_GetTimeGap_Request_1905* Map_GetTimeGap_Request_1905::New(::google::protobuf::Arena* arena) const {
  Map_GetTimeGap_Request_1905* n = new Map_GetTimeGap_Request_1905;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_GetTimeGap_Request_1905::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_GetTimeGap_Request_1905)
  timems_ = GOOGLE_LONGLONG(0);
}

bool Map_GetTimeGap_Request_1905::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_GetTimeGap_Request_1905)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 TimeMs = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timems_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_GetTimeGap_Request_1905)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_GetTimeGap_Request_1905)
  return false;
#undef DO_
}

void Map_GetTimeGap_Request_1905::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_GetTimeGap_Request_1905)
  // optional int64 TimeMs = 1;
  if (this->timems() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timems(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_GetTimeGap_Request_1905)
}

::google::protobuf::uint8* Map_GetTimeGap_Request_1905::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_GetTimeGap_Request_1905)
  // optional int64 TimeMs = 1;
  if (this->timems() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timems(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_GetTimeGap_Request_1905)
  return target;
}

int Map_GetTimeGap_Request_1905::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_GetTimeGap_Request_1905)
  int total_size = 0;

  // optional int64 TimeMs = 1;
  if (this->timems() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timems());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_GetTimeGap_Request_1905::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_GetTimeGap_Request_1905)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_GetTimeGap_Request_1905* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_GetTimeGap_Request_1905>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_GetTimeGap_Request_1905)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_GetTimeGap_Request_1905)
    MergeFrom(*source);
  }
}

void Map_GetTimeGap_Request_1905::MergeFrom(const Map_GetTimeGap_Request_1905& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_GetTimeGap_Request_1905)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.timems() != 0) {
    set_timems(from.timems());
  }
}

void Map_GetTimeGap_Request_1905::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_GetTimeGap_Request_1905)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_GetTimeGap_Request_1905::CopyFrom(const Map_GetTimeGap_Request_1905& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_GetTimeGap_Request_1905)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_GetTimeGap_Request_1905::IsInitialized() const {

  return true;
}

void Map_GetTimeGap_Request_1905::Swap(Map_GetTimeGap_Request_1905* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_GetTimeGap_Request_1905::InternalSwap(Map_GetTimeGap_Request_1905* other) {
  std::swap(timems_, other->timems_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_GetTimeGap_Request_1905::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_GetTimeGap_Request_1905_descriptor_;
  metadata.reflection = Map_GetTimeGap_Request_1905_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_GetTimeGap_Request_1905

// optional int64 TimeMs = 1;
void Map_GetTimeGap_Request_1905::clear_timems() {
  timems_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_GetTimeGap_Request_1905::timems() const {
  // @@protoc_insertion_point(field_get:map.Map_GetTimeGap_Request_1905.TimeMs)
  return timems_;
}
 void Map_GetTimeGap_Request_1905::set_timems(::google::protobuf::int64 value) {
  
  timems_ = value;
  // @@protoc_insertion_point(field_set:map.Map_GetTimeGap_Request_1905.TimeMs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_GetTimeGap_Response_1905::kTimeMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_GetTimeGap_Response_1905::Map_GetTimeGap_Response_1905()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_GetTimeGap_Response_1905)
}

void Map_GetTimeGap_Response_1905::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_GetTimeGap_Response_1905::Map_GetTimeGap_Response_1905(const Map_GetTimeGap_Response_1905& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_GetTimeGap_Response_1905)
}

void Map_GetTimeGap_Response_1905::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timems_ = GOOGLE_LONGLONG(0);
}

Map_GetTimeGap_Response_1905::~Map_GetTimeGap_Response_1905() {
  // @@protoc_insertion_point(destructor:map.Map_GetTimeGap_Response_1905)
  SharedDtor();
}

void Map_GetTimeGap_Response_1905::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_GetTimeGap_Response_1905::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_GetTimeGap_Response_1905::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_GetTimeGap_Response_1905_descriptor_;
}

const Map_GetTimeGap_Response_1905& Map_GetTimeGap_Response_1905::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_GetTimeGap_Response_1905* Map_GetTimeGap_Response_1905::default_instance_ = NULL;

Map_GetTimeGap_Response_1905* Map_GetTimeGap_Response_1905::New(::google::protobuf::Arena* arena) const {
  Map_GetTimeGap_Response_1905* n = new Map_GetTimeGap_Response_1905;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_GetTimeGap_Response_1905::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_GetTimeGap_Response_1905)
  timems_ = GOOGLE_LONGLONG(0);
}

bool Map_GetTimeGap_Response_1905::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_GetTimeGap_Response_1905)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 TimeMs = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timems_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_GetTimeGap_Response_1905)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_GetTimeGap_Response_1905)
  return false;
#undef DO_
}

void Map_GetTimeGap_Response_1905::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_GetTimeGap_Response_1905)
  // optional int64 TimeMs = 1;
  if (this->timems() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timems(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_GetTimeGap_Response_1905)
}

::google::protobuf::uint8* Map_GetTimeGap_Response_1905::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_GetTimeGap_Response_1905)
  // optional int64 TimeMs = 1;
  if (this->timems() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timems(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_GetTimeGap_Response_1905)
  return target;
}

int Map_GetTimeGap_Response_1905::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_GetTimeGap_Response_1905)
  int total_size = 0;

  // optional int64 TimeMs = 1;
  if (this->timems() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timems());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_GetTimeGap_Response_1905::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_GetTimeGap_Response_1905)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_GetTimeGap_Response_1905* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_GetTimeGap_Response_1905>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_GetTimeGap_Response_1905)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_GetTimeGap_Response_1905)
    MergeFrom(*source);
  }
}

void Map_GetTimeGap_Response_1905::MergeFrom(const Map_GetTimeGap_Response_1905& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_GetTimeGap_Response_1905)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.timems() != 0) {
    set_timems(from.timems());
  }
}

void Map_GetTimeGap_Response_1905::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_GetTimeGap_Response_1905)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_GetTimeGap_Response_1905::CopyFrom(const Map_GetTimeGap_Response_1905& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_GetTimeGap_Response_1905)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_GetTimeGap_Response_1905::IsInitialized() const {

  return true;
}

void Map_GetTimeGap_Response_1905::Swap(Map_GetTimeGap_Response_1905* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_GetTimeGap_Response_1905::InternalSwap(Map_GetTimeGap_Response_1905* other) {
  std::swap(timems_, other->timems_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_GetTimeGap_Response_1905::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_GetTimeGap_Response_1905_descriptor_;
  metadata.reflection = Map_GetTimeGap_Response_1905_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_GetTimeGap_Response_1905

// optional int64 TimeMs = 1;
void Map_GetTimeGap_Response_1905::clear_timems() {
  timems_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_GetTimeGap_Response_1905::timems() const {
  // @@protoc_insertion_point(field_get:map.Map_GetTimeGap_Response_1905.TimeMs)
  return timems_;
}
 void Map_GetTimeGap_Response_1905::set_timems(::google::protobuf::int64 value) {
  
  timems_ = value;
  // @@protoc_insertion_point(field_set:map.Map_GetTimeGap_Response_1905.TimeMs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleMove_Request_1011::kRoleUidFieldNumber;
const int Map_RoleMove_Request_1011::kTimeMsFieldNumber;
const int Map_RoleMove_Request_1011::kAngleFieldNumber;
const int Map_RoleMove_Request_1011::kNowPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleMove_Request_1011::Map_RoleMove_Request_1011()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleMove_Request_1011)
}

void Map_RoleMove_Request_1011::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nowpoint_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Map_RoleMove_Request_1011::Map_RoleMove_Request_1011(const Map_RoleMove_Request_1011& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleMove_Request_1011)
}

void Map_RoleMove_Request_1011::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  timems_ = GOOGLE_LONGLONG(0);
  angle_ = 0;
  nowpoint_ = NULL;
}

Map_RoleMove_Request_1011::~Map_RoleMove_Request_1011() {
  // @@protoc_insertion_point(destructor:map.Map_RoleMove_Request_1011)
  SharedDtor();
}

void Map_RoleMove_Request_1011::SharedDtor() {
  if (this != default_instance_) {
    delete nowpoint_;
  }
}

void Map_RoleMove_Request_1011::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleMove_Request_1011::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleMove_Request_1011_descriptor_;
}

const Map_RoleMove_Request_1011& Map_RoleMove_Request_1011::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleMove_Request_1011* Map_RoleMove_Request_1011::default_instance_ = NULL;

Map_RoleMove_Request_1011* Map_RoleMove_Request_1011::New(::google::protobuf::Arena* arena) const {
  Map_RoleMove_Request_1011* n = new Map_RoleMove_Request_1011;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleMove_Request_1011::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleMove_Request_1011)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_RoleMove_Request_1011, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_RoleMove_Request_1011*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, timems_);
  angle_ = 0;
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool Map_RoleMove_Request_1011::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleMove_Request_1011)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TimeMs;
        break;
      }

      // optional int64 TimeMs = 2;
      case 2: {
        if (tag == 16) {
         parse_TimeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timems_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_Angle;
        break;
      }

      // optional float Angle = 3;
      case 3: {
        if (tag == 29) {
         parse_Angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_NowPoint;
        break;
      }

      // optional .map.Struct_Point3D NowPoint = 4;
      case 4: {
        if (tag == 34) {
         parse_NowPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nowpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleMove_Request_1011)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleMove_Request_1011)
  return false;
#undef DO_
}

void Map_RoleMove_Request_1011::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleMove_Request_1011)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timems(), output);
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle(), output);
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->nowpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleMove_Request_1011)
}

::google::protobuf::uint8* Map_RoleMove_Request_1011::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleMove_Request_1011)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timems(), target);
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle(), target);
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->nowpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleMove_Request_1011)
  return target;
}

int Map_RoleMove_Request_1011::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleMove_Request_1011)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timems());
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nowpoint_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleMove_Request_1011::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleMove_Request_1011)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleMove_Request_1011* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleMove_Request_1011>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleMove_Request_1011)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleMove_Request_1011)
    MergeFrom(*source);
  }
}

void Map_RoleMove_Request_1011::MergeFrom(const Map_RoleMove_Request_1011& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleMove_Request_1011)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.timems() != 0) {
    set_timems(from.timems());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.has_nowpoint()) {
    mutable_nowpoint()->::map::Struct_Point3D::MergeFrom(from.nowpoint());
  }
}

void Map_RoleMove_Request_1011::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleMove_Request_1011)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleMove_Request_1011::CopyFrom(const Map_RoleMove_Request_1011& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleMove_Request_1011)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleMove_Request_1011::IsInitialized() const {

  return true;
}

void Map_RoleMove_Request_1011::Swap(Map_RoleMove_Request_1011* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleMove_Request_1011::InternalSwap(Map_RoleMove_Request_1011* other) {
  std::swap(roleuid_, other->roleuid_);
  std::swap(timems_, other->timems_);
  std::swap(angle_, other->angle_);
  std::swap(nowpoint_, other->nowpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleMove_Request_1011::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleMove_Request_1011_descriptor_;
  metadata.reflection = Map_RoleMove_Request_1011_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleMove_Request_1011

// optional int64 RoleUid = 1;
void Map_RoleMove_Request_1011::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMove_Request_1011::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMove_Request_1011.RoleUid)
  return roleuid_;
}
 void Map_RoleMove_Request_1011::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMove_Request_1011.RoleUid)
}

// optional int64 TimeMs = 2;
void Map_RoleMove_Request_1011::clear_timems() {
  timems_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMove_Request_1011::timems() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMove_Request_1011.TimeMs)
  return timems_;
}
 void Map_RoleMove_Request_1011::set_timems(::google::protobuf::int64 value) {
  
  timems_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMove_Request_1011.TimeMs)
}

// optional float Angle = 3;
void Map_RoleMove_Request_1011::clear_angle() {
  angle_ = 0;
}
 float Map_RoleMove_Request_1011::angle() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMove_Request_1011.Angle)
  return angle_;
}
 void Map_RoleMove_Request_1011::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMove_Request_1011.Angle)
}

// optional .map.Struct_Point3D NowPoint = 4;
bool Map_RoleMove_Request_1011::has_nowpoint() const {
  return !_is_default_instance_ && nowpoint_ != NULL;
}
void Map_RoleMove_Request_1011::clear_nowpoint() {
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}
const ::map::Struct_Point3D& Map_RoleMove_Request_1011::nowpoint() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMove_Request_1011.NowPoint)
  return nowpoint_ != NULL ? *nowpoint_ : *default_instance_->nowpoint_;
}
::map::Struct_Point3D* Map_RoleMove_Request_1011::mutable_nowpoint() {
  
  if (nowpoint_ == NULL) {
    nowpoint_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleMove_Request_1011.NowPoint)
  return nowpoint_;
}
::map::Struct_Point3D* Map_RoleMove_Request_1011::release_nowpoint() {
  // @@protoc_insertion_point(field_release:map.Map_RoleMove_Request_1011.NowPoint)
  
  ::map::Struct_Point3D* temp = nowpoint_;
  nowpoint_ = NULL;
  return temp;
}
void Map_RoleMove_Request_1011::set_allocated_nowpoint(::map::Struct_Point3D* nowpoint) {
  delete nowpoint_;
  nowpoint_ = nowpoint;
  if (nowpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleMove_Request_1011.NowPoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleMove_Response_1011::kErrorCodeFieldNumber;
const int Map_RoleMove_Response_1011::kRoleUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleMove_Response_1011::Map_RoleMove_Response_1011()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleMove_Response_1011)
}

void Map_RoleMove_Response_1011::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_RoleMove_Response_1011::Map_RoleMove_Response_1011(const Map_RoleMove_Response_1011& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleMove_Response_1011)
}

void Map_RoleMove_Response_1011::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errorcode_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
}

Map_RoleMove_Response_1011::~Map_RoleMove_Response_1011() {
  // @@protoc_insertion_point(destructor:map.Map_RoleMove_Response_1011)
  SharedDtor();
}

void Map_RoleMove_Response_1011::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_RoleMove_Response_1011::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleMove_Response_1011::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleMove_Response_1011_descriptor_;
}

const Map_RoleMove_Response_1011& Map_RoleMove_Response_1011::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleMove_Response_1011* Map_RoleMove_Response_1011::default_instance_ = NULL;

Map_RoleMove_Response_1011* Map_RoleMove_Response_1011::New(::google::protobuf::Arena* arena) const {
  Map_RoleMove_Response_1011* n = new Map_RoleMove_Response_1011;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleMove_Response_1011::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleMove_Response_1011)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_RoleMove_Response_1011, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_RoleMove_Response_1011*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, errorcode_);

#undef ZR_HELPER_
#undef ZR_

}

bool Map_RoleMove_Response_1011::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleMove_Response_1011)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ErrorCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleUid;
        break;
      }

      // optional int64 RoleUid = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleMove_Response_1011)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleMove_Response_1011)
  return false;
#undef DO_
}

void Map_RoleMove_Response_1011::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleMove_Response_1011)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleMove_Response_1011)
}

::google::protobuf::uint8* Map_RoleMove_Response_1011::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleMove_Response_1011)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleMove_Response_1011)
  return target;
}

int Map_RoleMove_Response_1011::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleMove_Response_1011)
  int total_size = 0;

  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleMove_Response_1011::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleMove_Response_1011)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleMove_Response_1011* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleMove_Response_1011>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleMove_Response_1011)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleMove_Response_1011)
    MergeFrom(*source);
  }
}

void Map_RoleMove_Response_1011::MergeFrom(const Map_RoleMove_Response_1011& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleMove_Response_1011)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
}

void Map_RoleMove_Response_1011::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleMove_Response_1011)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleMove_Response_1011::CopyFrom(const Map_RoleMove_Response_1011& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleMove_Response_1011)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleMove_Response_1011::IsInitialized() const {

  return true;
}

void Map_RoleMove_Response_1011::Swap(Map_RoleMove_Response_1011* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleMove_Response_1011::InternalSwap(Map_RoleMove_Response_1011* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(roleuid_, other->roleuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleMove_Response_1011::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleMove_Response_1011_descriptor_;
  metadata.reflection = Map_RoleMove_Response_1011_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleMove_Response_1011

// optional int32 ErrorCode = 1;
void Map_RoleMove_Response_1011::clear_errorcode() {
  errorcode_ = 0;
}
 ::google::protobuf::int32 Map_RoleMove_Response_1011::errorcode() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMove_Response_1011.ErrorCode)
  return errorcode_;
}
 void Map_RoleMove_Response_1011::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMove_Response_1011.ErrorCode)
}

// optional int64 RoleUid = 2;
void Map_RoleMove_Response_1011::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMove_Response_1011::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMove_Response_1011.RoleUid)
  return roleuid_;
}
 void Map_RoleMove_Response_1011::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMove_Response_1011.RoleUid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleStop_Request_1012::kRoleUidFieldNumber;
const int Map_RoleStop_Request_1012::kTimeMsFieldNumber;
const int Map_RoleStop_Request_1012::kAngleFieldNumber;
const int Map_RoleStop_Request_1012::kNowPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleStop_Request_1012::Map_RoleStop_Request_1012()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleStop_Request_1012)
}

void Map_RoleStop_Request_1012::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nowpoint_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Map_RoleStop_Request_1012::Map_RoleStop_Request_1012(const Map_RoleStop_Request_1012& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleStop_Request_1012)
}

void Map_RoleStop_Request_1012::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  timems_ = GOOGLE_LONGLONG(0);
  angle_ = 0;
  nowpoint_ = NULL;
}

Map_RoleStop_Request_1012::~Map_RoleStop_Request_1012() {
  // @@protoc_insertion_point(destructor:map.Map_RoleStop_Request_1012)
  SharedDtor();
}

void Map_RoleStop_Request_1012::SharedDtor() {
  if (this != default_instance_) {
    delete nowpoint_;
  }
}

void Map_RoleStop_Request_1012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleStop_Request_1012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleStop_Request_1012_descriptor_;
}

const Map_RoleStop_Request_1012& Map_RoleStop_Request_1012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleStop_Request_1012* Map_RoleStop_Request_1012::default_instance_ = NULL;

Map_RoleStop_Request_1012* Map_RoleStop_Request_1012::New(::google::protobuf::Arena* arena) const {
  Map_RoleStop_Request_1012* n = new Map_RoleStop_Request_1012;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleStop_Request_1012::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleStop_Request_1012)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_RoleStop_Request_1012, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_RoleStop_Request_1012*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, timems_);
  angle_ = 0;
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool Map_RoleStop_Request_1012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleStop_Request_1012)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TimeMs;
        break;
      }

      // optional int64 TimeMs = 2;
      case 2: {
        if (tag == 16) {
         parse_TimeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timems_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_Angle;
        break;
      }

      // optional float Angle = 3;
      case 3: {
        if (tag == 29) {
         parse_Angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_NowPoint;
        break;
      }

      // optional .map.Struct_Point3D NowPoint = 4;
      case 4: {
        if (tag == 34) {
         parse_NowPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nowpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleStop_Request_1012)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleStop_Request_1012)
  return false;
#undef DO_
}

void Map_RoleStop_Request_1012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleStop_Request_1012)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timems(), output);
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle(), output);
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->nowpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleStop_Request_1012)
}

::google::protobuf::uint8* Map_RoleStop_Request_1012::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleStop_Request_1012)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timems(), target);
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle(), target);
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->nowpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleStop_Request_1012)
  return target;
}

int Map_RoleStop_Request_1012::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleStop_Request_1012)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timems());
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nowpoint_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleStop_Request_1012::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleStop_Request_1012)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleStop_Request_1012* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleStop_Request_1012>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleStop_Request_1012)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleStop_Request_1012)
    MergeFrom(*source);
  }
}

void Map_RoleStop_Request_1012::MergeFrom(const Map_RoleStop_Request_1012& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleStop_Request_1012)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.timems() != 0) {
    set_timems(from.timems());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.has_nowpoint()) {
    mutable_nowpoint()->::map::Struct_Point3D::MergeFrom(from.nowpoint());
  }
}

void Map_RoleStop_Request_1012::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleStop_Request_1012)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleStop_Request_1012::CopyFrom(const Map_RoleStop_Request_1012& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleStop_Request_1012)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleStop_Request_1012::IsInitialized() const {

  return true;
}

void Map_RoleStop_Request_1012::Swap(Map_RoleStop_Request_1012* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleStop_Request_1012::InternalSwap(Map_RoleStop_Request_1012* other) {
  std::swap(roleuid_, other->roleuid_);
  std::swap(timems_, other->timems_);
  std::swap(angle_, other->angle_);
  std::swap(nowpoint_, other->nowpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleStop_Request_1012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleStop_Request_1012_descriptor_;
  metadata.reflection = Map_RoleStop_Request_1012_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleStop_Request_1012

// optional int64 RoleUid = 1;
void Map_RoleStop_Request_1012::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleStop_Request_1012::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleStop_Request_1012.RoleUid)
  return roleuid_;
}
 void Map_RoleStop_Request_1012::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleStop_Request_1012.RoleUid)
}

// optional int64 TimeMs = 2;
void Map_RoleStop_Request_1012::clear_timems() {
  timems_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleStop_Request_1012::timems() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleStop_Request_1012.TimeMs)
  return timems_;
}
 void Map_RoleStop_Request_1012::set_timems(::google::protobuf::int64 value) {
  
  timems_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleStop_Request_1012.TimeMs)
}

// optional float Angle = 3;
void Map_RoleStop_Request_1012::clear_angle() {
  angle_ = 0;
}
 float Map_RoleStop_Request_1012::angle() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleStop_Request_1012.Angle)
  return angle_;
}
 void Map_RoleStop_Request_1012::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleStop_Request_1012.Angle)
}

// optional .map.Struct_Point3D NowPoint = 4;
bool Map_RoleStop_Request_1012::has_nowpoint() const {
  return !_is_default_instance_ && nowpoint_ != NULL;
}
void Map_RoleStop_Request_1012::clear_nowpoint() {
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}
const ::map::Struct_Point3D& Map_RoleStop_Request_1012::nowpoint() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleStop_Request_1012.NowPoint)
  return nowpoint_ != NULL ? *nowpoint_ : *default_instance_->nowpoint_;
}
::map::Struct_Point3D* Map_RoleStop_Request_1012::mutable_nowpoint() {
  
  if (nowpoint_ == NULL) {
    nowpoint_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleStop_Request_1012.NowPoint)
  return nowpoint_;
}
::map::Struct_Point3D* Map_RoleStop_Request_1012::release_nowpoint() {
  // @@protoc_insertion_point(field_release:map.Map_RoleStop_Request_1012.NowPoint)
  
  ::map::Struct_Point3D* temp = nowpoint_;
  nowpoint_ = NULL;
  return temp;
}
void Map_RoleStop_Request_1012::set_allocated_nowpoint(::map::Struct_Point3D* nowpoint) {
  delete nowpoint_;
  nowpoint_ = nowpoint;
  if (nowpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleStop_Request_1012.NowPoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleStop_Response_1012::kErrorCodeFieldNumber;
const int Map_RoleStop_Response_1012::kRoleUidFieldNumber;
const int Map_RoleStop_Response_1012::kNowPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleStop_Response_1012::Map_RoleStop_Response_1012()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleStop_Response_1012)
}

void Map_RoleStop_Response_1012::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nowpoint_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Map_RoleStop_Response_1012::Map_RoleStop_Response_1012(const Map_RoleStop_Response_1012& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleStop_Response_1012)
}

void Map_RoleStop_Response_1012::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errorcode_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  nowpoint_ = NULL;
}

Map_RoleStop_Response_1012::~Map_RoleStop_Response_1012() {
  // @@protoc_insertion_point(destructor:map.Map_RoleStop_Response_1012)
  SharedDtor();
}

void Map_RoleStop_Response_1012::SharedDtor() {
  if (this != default_instance_) {
    delete nowpoint_;
  }
}

void Map_RoleStop_Response_1012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleStop_Response_1012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleStop_Response_1012_descriptor_;
}

const Map_RoleStop_Response_1012& Map_RoleStop_Response_1012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleStop_Response_1012* Map_RoleStop_Response_1012::default_instance_ = NULL;

Map_RoleStop_Response_1012* Map_RoleStop_Response_1012::New(::google::protobuf::Arena* arena) const {
  Map_RoleStop_Response_1012* n = new Map_RoleStop_Response_1012;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleStop_Response_1012::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleStop_Response_1012)
  errorcode_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}

bool Map_RoleStop_Response_1012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleStop_Response_1012)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ErrorCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleUid;
        break;
      }

      // optional int64 RoleUid = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_NowPoint;
        break;
      }

      // optional .map.Struct_Point3D NowPoint = 3;
      case 3: {
        if (tag == 26) {
         parse_NowPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nowpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleStop_Response_1012)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleStop_Response_1012)
  return false;
#undef DO_
}

void Map_RoleStop_Response_1012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleStop_Response_1012)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleuid(), output);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->nowpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleStop_Response_1012)
}

::google::protobuf::uint8* Map_RoleStop_Response_1012::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleStop_Response_1012)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleuid(), target);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->nowpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleStop_Response_1012)
  return target;
}

int Map_RoleStop_Response_1012::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleStop_Response_1012)
  int total_size = 0;

  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nowpoint_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleStop_Response_1012::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleStop_Response_1012)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleStop_Response_1012* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleStop_Response_1012>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleStop_Response_1012)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleStop_Response_1012)
    MergeFrom(*source);
  }
}

void Map_RoleStop_Response_1012::MergeFrom(const Map_RoleStop_Response_1012& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleStop_Response_1012)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.has_nowpoint()) {
    mutable_nowpoint()->::map::Struct_Point3D::MergeFrom(from.nowpoint());
  }
}

void Map_RoleStop_Response_1012::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleStop_Response_1012)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleStop_Response_1012::CopyFrom(const Map_RoleStop_Response_1012& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleStop_Response_1012)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleStop_Response_1012::IsInitialized() const {

  return true;
}

void Map_RoleStop_Response_1012::Swap(Map_RoleStop_Response_1012* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleStop_Response_1012::InternalSwap(Map_RoleStop_Response_1012* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(roleuid_, other->roleuid_);
  std::swap(nowpoint_, other->nowpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleStop_Response_1012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleStop_Response_1012_descriptor_;
  metadata.reflection = Map_RoleStop_Response_1012_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleStop_Response_1012

// optional int32 ErrorCode = 1;
void Map_RoleStop_Response_1012::clear_errorcode() {
  errorcode_ = 0;
}
 ::google::protobuf::int32 Map_RoleStop_Response_1012::errorcode() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleStop_Response_1012.ErrorCode)
  return errorcode_;
}
 void Map_RoleStop_Response_1012::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleStop_Response_1012.ErrorCode)
}

// optional int64 RoleUid = 2;
void Map_RoleStop_Response_1012::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleStop_Response_1012::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleStop_Response_1012.RoleUid)
  return roleuid_;
}
 void Map_RoleStop_Response_1012::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleStop_Response_1012.RoleUid)
}

// optional .map.Struct_Point3D NowPoint = 3;
bool Map_RoleStop_Response_1012::has_nowpoint() const {
  return !_is_default_instance_ && nowpoint_ != NULL;
}
void Map_RoleStop_Response_1012::clear_nowpoint() {
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}
const ::map::Struct_Point3D& Map_RoleStop_Response_1012::nowpoint() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleStop_Response_1012.NowPoint)
  return nowpoint_ != NULL ? *nowpoint_ : *default_instance_->nowpoint_;
}
::map::Struct_Point3D* Map_RoleStop_Response_1012::mutable_nowpoint() {
  
  if (nowpoint_ == NULL) {
    nowpoint_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleStop_Response_1012.NowPoint)
  return nowpoint_;
}
::map::Struct_Point3D* Map_RoleStop_Response_1012::release_nowpoint() {
  // @@protoc_insertion_point(field_release:map.Map_RoleStop_Response_1012.NowPoint)
  
  ::map::Struct_Point3D* temp = nowpoint_;
  nowpoint_ = NULL;
  return temp;
}
void Map_RoleStop_Response_1012::set_allocated_nowpoint(::map::Struct_Point3D* nowpoint) {
  delete nowpoint_;
  nowpoint_ = nowpoint;
  if (nowpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleStop_Response_1012.NowPoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleMoveToPosition_Request_1021::kRoleUidFieldNumber;
const int Map_RoleMoveToPosition_Request_1021::kTimeMsFieldNumber;
const int Map_RoleMoveToPosition_Request_1021::kToPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleMoveToPosition_Request_1021::Map_RoleMoveToPosition_Request_1021()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleMoveToPosition_Request_1021)
}

void Map_RoleMoveToPosition_Request_1021::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_RoleMoveToPosition_Request_1021::Map_RoleMoveToPosition_Request_1021(const Map_RoleMoveToPosition_Request_1021& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleMoveToPosition_Request_1021)
}

void Map_RoleMoveToPosition_Request_1021::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  timems_ = GOOGLE_LONGLONG(0);
}

Map_RoleMoveToPosition_Request_1021::~Map_RoleMoveToPosition_Request_1021() {
  // @@protoc_insertion_point(destructor:map.Map_RoleMoveToPosition_Request_1021)
  SharedDtor();
}

void Map_RoleMoveToPosition_Request_1021::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_RoleMoveToPosition_Request_1021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleMoveToPosition_Request_1021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleMoveToPosition_Request_1021_descriptor_;
}

const Map_RoleMoveToPosition_Request_1021& Map_RoleMoveToPosition_Request_1021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleMoveToPosition_Request_1021* Map_RoleMoveToPosition_Request_1021::default_instance_ = NULL;

Map_RoleMoveToPosition_Request_1021* Map_RoleMoveToPosition_Request_1021::New(::google::protobuf::Arena* arena) const {
  Map_RoleMoveToPosition_Request_1021* n = new Map_RoleMoveToPosition_Request_1021;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleMoveToPosition_Request_1021::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleMoveToPosition_Request_1021)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_RoleMoveToPosition_Request_1021, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_RoleMoveToPosition_Request_1021*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, timems_);

#undef ZR_HELPER_
#undef ZR_

  toposition_.Clear();
}

bool Map_RoleMoveToPosition_Request_1021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleMoveToPosition_Request_1021)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TimeMs;
        break;
      }

      // optional int64 TimeMs = 2;
      case 2: {
        if (tag == 16) {
         parse_TimeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timems_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ToPosition;
        break;
      }

      // repeated .map.Struct_Point3D ToPosition = 3;
      case 3: {
        if (tag == 26) {
         parse_ToPosition:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ToPosition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_toposition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_ToPosition;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleMoveToPosition_Request_1021)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleMoveToPosition_Request_1021)
  return false;
#undef DO_
}

void Map_RoleMoveToPosition_Request_1021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleMoveToPosition_Request_1021)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timems(), output);
  }

  // repeated .map.Struct_Point3D ToPosition = 3;
  for (unsigned int i = 0, n = this->toposition_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->toposition(i), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleMoveToPosition_Request_1021)
}

::google::protobuf::uint8* Map_RoleMoveToPosition_Request_1021::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleMoveToPosition_Request_1021)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timems(), target);
  }

  // repeated .map.Struct_Point3D ToPosition = 3;
  for (unsigned int i = 0, n = this->toposition_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->toposition(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleMoveToPosition_Request_1021)
  return target;
}

int Map_RoleMoveToPosition_Request_1021::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleMoveToPosition_Request_1021)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timems());
  }

  // repeated .map.Struct_Point3D ToPosition = 3;
  total_size += 1 * this->toposition_size();
  for (int i = 0; i < this->toposition_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->toposition(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleMoveToPosition_Request_1021::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleMoveToPosition_Request_1021)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleMoveToPosition_Request_1021* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleMoveToPosition_Request_1021>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleMoveToPosition_Request_1021)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleMoveToPosition_Request_1021)
    MergeFrom(*source);
  }
}

void Map_RoleMoveToPosition_Request_1021::MergeFrom(const Map_RoleMoveToPosition_Request_1021& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleMoveToPosition_Request_1021)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  toposition_.MergeFrom(from.toposition_);
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.timems() != 0) {
    set_timems(from.timems());
  }
}

void Map_RoleMoveToPosition_Request_1021::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleMoveToPosition_Request_1021)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleMoveToPosition_Request_1021::CopyFrom(const Map_RoleMoveToPosition_Request_1021& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleMoveToPosition_Request_1021)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleMoveToPosition_Request_1021::IsInitialized() const {

  return true;
}

void Map_RoleMoveToPosition_Request_1021::Swap(Map_RoleMoveToPosition_Request_1021* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleMoveToPosition_Request_1021::InternalSwap(Map_RoleMoveToPosition_Request_1021* other) {
  std::swap(roleuid_, other->roleuid_);
  std::swap(timems_, other->timems_);
  toposition_.UnsafeArenaSwap(&other->toposition_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleMoveToPosition_Request_1021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleMoveToPosition_Request_1021_descriptor_;
  metadata.reflection = Map_RoleMoveToPosition_Request_1021_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleMoveToPosition_Request_1021

// optional int64 RoleUid = 1;
void Map_RoleMoveToPosition_Request_1021::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMoveToPosition_Request_1021::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveToPosition_Request_1021.RoleUid)
  return roleuid_;
}
 void Map_RoleMoveToPosition_Request_1021::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMoveToPosition_Request_1021.RoleUid)
}

// optional int64 TimeMs = 2;
void Map_RoleMoveToPosition_Request_1021::clear_timems() {
  timems_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMoveToPosition_Request_1021::timems() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveToPosition_Request_1021.TimeMs)
  return timems_;
}
 void Map_RoleMoveToPosition_Request_1021::set_timems(::google::protobuf::int64 value) {
  
  timems_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMoveToPosition_Request_1021.TimeMs)
}

// repeated .map.Struct_Point3D ToPosition = 3;
int Map_RoleMoveToPosition_Request_1021::toposition_size() const {
  return toposition_.size();
}
void Map_RoleMoveToPosition_Request_1021::clear_toposition() {
  toposition_.Clear();
}
const ::map::Struct_Point3D& Map_RoleMoveToPosition_Request_1021::toposition(int index) const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveToPosition_Request_1021.ToPosition)
  return toposition_.Get(index);
}
::map::Struct_Point3D* Map_RoleMoveToPosition_Request_1021::mutable_toposition(int index) {
  // @@protoc_insertion_point(field_mutable:map.Map_RoleMoveToPosition_Request_1021.ToPosition)
  return toposition_.Mutable(index);
}
::map::Struct_Point3D* Map_RoleMoveToPosition_Request_1021::add_toposition() {
  // @@protoc_insertion_point(field_add:map.Map_RoleMoveToPosition_Request_1021.ToPosition)
  return toposition_.Add();
}
::google::protobuf::RepeatedPtrField< ::map::Struct_Point3D >*
Map_RoleMoveToPosition_Request_1021::mutable_toposition() {
  // @@protoc_insertion_point(field_mutable_list:map.Map_RoleMoveToPosition_Request_1021.ToPosition)
  return &toposition_;
}
const ::google::protobuf::RepeatedPtrField< ::map::Struct_Point3D >&
Map_RoleMoveToPosition_Request_1021::toposition() const {
  // @@protoc_insertion_point(field_list:map.Map_RoleMoveToPosition_Request_1021.ToPosition)
  return toposition_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleMoveToPosition_Response_1021::kErrorCodeFieldNumber;
const int Map_RoleMoveToPosition_Response_1021::kRoleUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleMoveToPosition_Response_1021::Map_RoleMoveToPosition_Response_1021()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleMoveToPosition_Response_1021)
}

void Map_RoleMoveToPosition_Response_1021::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_RoleMoveToPosition_Response_1021::Map_RoleMoveToPosition_Response_1021(const Map_RoleMoveToPosition_Response_1021& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleMoveToPosition_Response_1021)
}

void Map_RoleMoveToPosition_Response_1021::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errorcode_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
}

Map_RoleMoveToPosition_Response_1021::~Map_RoleMoveToPosition_Response_1021() {
  // @@protoc_insertion_point(destructor:map.Map_RoleMoveToPosition_Response_1021)
  SharedDtor();
}

void Map_RoleMoveToPosition_Response_1021::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_RoleMoveToPosition_Response_1021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleMoveToPosition_Response_1021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleMoveToPosition_Response_1021_descriptor_;
}

const Map_RoleMoveToPosition_Response_1021& Map_RoleMoveToPosition_Response_1021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleMoveToPosition_Response_1021* Map_RoleMoveToPosition_Response_1021::default_instance_ = NULL;

Map_RoleMoveToPosition_Response_1021* Map_RoleMoveToPosition_Response_1021::New(::google::protobuf::Arena* arena) const {
  Map_RoleMoveToPosition_Response_1021* n = new Map_RoleMoveToPosition_Response_1021;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleMoveToPosition_Response_1021::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleMoveToPosition_Response_1021)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_RoleMoveToPosition_Response_1021, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_RoleMoveToPosition_Response_1021*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, errorcode_);

#undef ZR_HELPER_
#undef ZR_

}

bool Map_RoleMoveToPosition_Response_1021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleMoveToPosition_Response_1021)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ErrorCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleUid;
        break;
      }

      // optional int64 RoleUid = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleMoveToPosition_Response_1021)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleMoveToPosition_Response_1021)
  return false;
#undef DO_
}

void Map_RoleMoveToPosition_Response_1021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleMoveToPosition_Response_1021)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleMoveToPosition_Response_1021)
}

::google::protobuf::uint8* Map_RoleMoveToPosition_Response_1021::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleMoveToPosition_Response_1021)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleMoveToPosition_Response_1021)
  return target;
}

int Map_RoleMoveToPosition_Response_1021::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleMoveToPosition_Response_1021)
  int total_size = 0;

  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleMoveToPosition_Response_1021::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleMoveToPosition_Response_1021)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleMoveToPosition_Response_1021* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleMoveToPosition_Response_1021>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleMoveToPosition_Response_1021)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleMoveToPosition_Response_1021)
    MergeFrom(*source);
  }
}

void Map_RoleMoveToPosition_Response_1021::MergeFrom(const Map_RoleMoveToPosition_Response_1021& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleMoveToPosition_Response_1021)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
}

void Map_RoleMoveToPosition_Response_1021::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleMoveToPosition_Response_1021)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleMoveToPosition_Response_1021::CopyFrom(const Map_RoleMoveToPosition_Response_1021& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleMoveToPosition_Response_1021)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleMoveToPosition_Response_1021::IsInitialized() const {

  return true;
}

void Map_RoleMoveToPosition_Response_1021::Swap(Map_RoleMoveToPosition_Response_1021* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleMoveToPosition_Response_1021::InternalSwap(Map_RoleMoveToPosition_Response_1021* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(roleuid_, other->roleuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleMoveToPosition_Response_1021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleMoveToPosition_Response_1021_descriptor_;
  metadata.reflection = Map_RoleMoveToPosition_Response_1021_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleMoveToPosition_Response_1021

// optional int32 ErrorCode = 1;
void Map_RoleMoveToPosition_Response_1021::clear_errorcode() {
  errorcode_ = 0;
}
 ::google::protobuf::int32 Map_RoleMoveToPosition_Response_1021::errorcode() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveToPosition_Response_1021.ErrorCode)
  return errorcode_;
}
 void Map_RoleMoveToPosition_Response_1021::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMoveToPosition_Response_1021.ErrorCode)
}

// optional int64 RoleUid = 2;
void Map_RoleMoveToPosition_Response_1021::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMoveToPosition_Response_1021::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveToPosition_Response_1021.RoleUid)
  return roleuid_;
}
 void Map_RoleMoveToPosition_Response_1021::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMoveToPosition_Response_1021.RoleUid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_GetAllRole_Request_1061::kRoleUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_GetAllRole_Request_1061::Map_GetAllRole_Request_1061()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_GetAllRole_Request_1061)
}

void Map_GetAllRole_Request_1061::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_GetAllRole_Request_1061::Map_GetAllRole_Request_1061(const Map_GetAllRole_Request_1061& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_GetAllRole_Request_1061)
}

void Map_GetAllRole_Request_1061::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
}

Map_GetAllRole_Request_1061::~Map_GetAllRole_Request_1061() {
  // @@protoc_insertion_point(destructor:map.Map_GetAllRole_Request_1061)
  SharedDtor();
}

void Map_GetAllRole_Request_1061::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_GetAllRole_Request_1061::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_GetAllRole_Request_1061::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_GetAllRole_Request_1061_descriptor_;
}

const Map_GetAllRole_Request_1061& Map_GetAllRole_Request_1061::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_GetAllRole_Request_1061* Map_GetAllRole_Request_1061::default_instance_ = NULL;

Map_GetAllRole_Request_1061* Map_GetAllRole_Request_1061::New(::google::protobuf::Arena* arena) const {
  Map_GetAllRole_Request_1061* n = new Map_GetAllRole_Request_1061;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_GetAllRole_Request_1061::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_GetAllRole_Request_1061)
  roleuid_ = GOOGLE_LONGLONG(0);
}

bool Map_GetAllRole_Request_1061::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_GetAllRole_Request_1061)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_GetAllRole_Request_1061)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_GetAllRole_Request_1061)
  return false;
#undef DO_
}

void Map_GetAllRole_Request_1061::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_GetAllRole_Request_1061)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_GetAllRole_Request_1061)
}

::google::protobuf::uint8* Map_GetAllRole_Request_1061::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_GetAllRole_Request_1061)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_GetAllRole_Request_1061)
  return target;
}

int Map_GetAllRole_Request_1061::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_GetAllRole_Request_1061)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_GetAllRole_Request_1061::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_GetAllRole_Request_1061)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_GetAllRole_Request_1061* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_GetAllRole_Request_1061>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_GetAllRole_Request_1061)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_GetAllRole_Request_1061)
    MergeFrom(*source);
  }
}

void Map_GetAllRole_Request_1061::MergeFrom(const Map_GetAllRole_Request_1061& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_GetAllRole_Request_1061)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
}

void Map_GetAllRole_Request_1061::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_GetAllRole_Request_1061)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_GetAllRole_Request_1061::CopyFrom(const Map_GetAllRole_Request_1061& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_GetAllRole_Request_1061)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_GetAllRole_Request_1061::IsInitialized() const {

  return true;
}

void Map_GetAllRole_Request_1061::Swap(Map_GetAllRole_Request_1061* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_GetAllRole_Request_1061::InternalSwap(Map_GetAllRole_Request_1061* other) {
  std::swap(roleuid_, other->roleuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_GetAllRole_Request_1061::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_GetAllRole_Request_1061_descriptor_;
  metadata.reflection = Map_GetAllRole_Request_1061_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_GetAllRole_Request_1061

// optional int64 RoleUid = 1;
void Map_GetAllRole_Request_1061::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_GetAllRole_Request_1061::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_GetAllRole_Request_1061.RoleUid)
  return roleuid_;
}
 void Map_GetAllRole_Request_1061::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_GetAllRole_Request_1061.RoleUid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_GetAllRole_Response_1061::kErrorCodeFieldNumber;
const int Map_GetAllRole_Response_1061::kRoleMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_GetAllRole_Response_1061::Map_GetAllRole_Response_1061()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_GetAllRole_Response_1061)
}

void Map_GetAllRole_Response_1061::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_GetAllRole_Response_1061::Map_GetAllRole_Response_1061(const Map_GetAllRole_Response_1061& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_GetAllRole_Response_1061)
}

void Map_GetAllRole_Response_1061::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errorcode_ = 0;
}

Map_GetAllRole_Response_1061::~Map_GetAllRole_Response_1061() {
  // @@protoc_insertion_point(destructor:map.Map_GetAllRole_Response_1061)
  SharedDtor();
}

void Map_GetAllRole_Response_1061::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_GetAllRole_Response_1061::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_GetAllRole_Response_1061::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_GetAllRole_Response_1061_descriptor_;
}

const Map_GetAllRole_Response_1061& Map_GetAllRole_Response_1061::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_GetAllRole_Response_1061* Map_GetAllRole_Response_1061::default_instance_ = NULL;

Map_GetAllRole_Response_1061* Map_GetAllRole_Response_1061::New(::google::protobuf::Arena* arena) const {
  Map_GetAllRole_Response_1061* n = new Map_GetAllRole_Response_1061;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_GetAllRole_Response_1061::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_GetAllRole_Response_1061)
  errorcode_ = 0;
  rolemessage_.Clear();
}

bool Map_GetAllRole_Response_1061::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_GetAllRole_Response_1061)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ErrorCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RoleMessage;
        break;
      }

      // repeated .map.Struct_Role_Situation RoleMessage = 2;
      case 2: {
        if (tag == 18) {
         parse_RoleMessage:
          DO_(input->IncrementRecursionDepth());
         parse_loop_RoleMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rolemessage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_RoleMessage;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_GetAllRole_Response_1061)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_GetAllRole_Response_1061)
  return false;
#undef DO_
}

void Map_GetAllRole_Response_1061::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_GetAllRole_Response_1061)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // repeated .map.Struct_Role_Situation RoleMessage = 2;
  for (unsigned int i = 0, n = this->rolemessage_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rolemessage(i), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_GetAllRole_Response_1061)
}

::google::protobuf::uint8* Map_GetAllRole_Response_1061::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_GetAllRole_Response_1061)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // repeated .map.Struct_Role_Situation RoleMessage = 2;
  for (unsigned int i = 0, n = this->rolemessage_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->rolemessage(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_GetAllRole_Response_1061)
  return target;
}

int Map_GetAllRole_Response_1061::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_GetAllRole_Response_1061)
  int total_size = 0;

  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  // repeated .map.Struct_Role_Situation RoleMessage = 2;
  total_size += 1 * this->rolemessage_size();
  for (int i = 0; i < this->rolemessage_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rolemessage(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_GetAllRole_Response_1061::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_GetAllRole_Response_1061)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_GetAllRole_Response_1061* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_GetAllRole_Response_1061>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_GetAllRole_Response_1061)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_GetAllRole_Response_1061)
    MergeFrom(*source);
  }
}

void Map_GetAllRole_Response_1061::MergeFrom(const Map_GetAllRole_Response_1061& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_GetAllRole_Response_1061)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rolemessage_.MergeFrom(from.rolemessage_);
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
}

void Map_GetAllRole_Response_1061::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_GetAllRole_Response_1061)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_GetAllRole_Response_1061::CopyFrom(const Map_GetAllRole_Response_1061& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_GetAllRole_Response_1061)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_GetAllRole_Response_1061::IsInitialized() const {

  return true;
}

void Map_GetAllRole_Response_1061::Swap(Map_GetAllRole_Response_1061* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_GetAllRole_Response_1061::InternalSwap(Map_GetAllRole_Response_1061* other) {
  std::swap(errorcode_, other->errorcode_);
  rolemessage_.UnsafeArenaSwap(&other->rolemessage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_GetAllRole_Response_1061::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_GetAllRole_Response_1061_descriptor_;
  metadata.reflection = Map_GetAllRole_Response_1061_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_GetAllRole_Response_1061

// optional int32 ErrorCode = 1;
void Map_GetAllRole_Response_1061::clear_errorcode() {
  errorcode_ = 0;
}
 ::google::protobuf::int32 Map_GetAllRole_Response_1061::errorcode() const {
  // @@protoc_insertion_point(field_get:map.Map_GetAllRole_Response_1061.ErrorCode)
  return errorcode_;
}
 void Map_GetAllRole_Response_1061::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:map.Map_GetAllRole_Response_1061.ErrorCode)
}

// repeated .map.Struct_Role_Situation RoleMessage = 2;
int Map_GetAllRole_Response_1061::rolemessage_size() const {
  return rolemessage_.size();
}
void Map_GetAllRole_Response_1061::clear_rolemessage() {
  rolemessage_.Clear();
}
const ::map::Struct_Role_Situation& Map_GetAllRole_Response_1061::rolemessage(int index) const {
  // @@protoc_insertion_point(field_get:map.Map_GetAllRole_Response_1061.RoleMessage)
  return rolemessage_.Get(index);
}
::map::Struct_Role_Situation* Map_GetAllRole_Response_1061::mutable_rolemessage(int index) {
  // @@protoc_insertion_point(field_mutable:map.Map_GetAllRole_Response_1061.RoleMessage)
  return rolemessage_.Mutable(index);
}
::map::Struct_Role_Situation* Map_GetAllRole_Response_1061::add_rolemessage() {
  // @@protoc_insertion_point(field_add:map.Map_GetAllRole_Response_1061.RoleMessage)
  return rolemessage_.Add();
}
::google::protobuf::RepeatedPtrField< ::map::Struct_Role_Situation >*
Map_GetAllRole_Response_1061::mutable_rolemessage() {
  // @@protoc_insertion_point(field_mutable_list:map.Map_GetAllRole_Response_1061.RoleMessage)
  return &rolemessage_;
}
const ::google::protobuf::RepeatedPtrField< ::map::Struct_Role_Situation >&
Map_GetAllRole_Response_1061::rolemessage() const {
  // @@protoc_insertion_point(field_list:map.Map_GetAllRole_Response_1061.RoleMessage)
  return rolemessage_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleMoveCheckout_Request_1062::kRoleUidFieldNumber;
const int Map_RoleMoveCheckout_Request_1062::kTimeMsFieldNumber;
const int Map_RoleMoveCheckout_Request_1062::kNowPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleMoveCheckout_Request_1062::Map_RoleMoveCheckout_Request_1062()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleMoveCheckout_Request_1062)
}

void Map_RoleMoveCheckout_Request_1062::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nowpoint_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Map_RoleMoveCheckout_Request_1062::Map_RoleMoveCheckout_Request_1062(const Map_RoleMoveCheckout_Request_1062& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleMoveCheckout_Request_1062)
}

void Map_RoleMoveCheckout_Request_1062::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  timems_ = GOOGLE_LONGLONG(0);
  nowpoint_ = NULL;
}

Map_RoleMoveCheckout_Request_1062::~Map_RoleMoveCheckout_Request_1062() {
  // @@protoc_insertion_point(destructor:map.Map_RoleMoveCheckout_Request_1062)
  SharedDtor();
}

void Map_RoleMoveCheckout_Request_1062::SharedDtor() {
  if (this != default_instance_) {
    delete nowpoint_;
  }
}

void Map_RoleMoveCheckout_Request_1062::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleMoveCheckout_Request_1062::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleMoveCheckout_Request_1062_descriptor_;
}

const Map_RoleMoveCheckout_Request_1062& Map_RoleMoveCheckout_Request_1062::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleMoveCheckout_Request_1062* Map_RoleMoveCheckout_Request_1062::default_instance_ = NULL;

Map_RoleMoveCheckout_Request_1062* Map_RoleMoveCheckout_Request_1062::New(::google::protobuf::Arena* arena) const {
  Map_RoleMoveCheckout_Request_1062* n = new Map_RoleMoveCheckout_Request_1062;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleMoveCheckout_Request_1062::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleMoveCheckout_Request_1062)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_RoleMoveCheckout_Request_1062, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_RoleMoveCheckout_Request_1062*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, timems_);
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool Map_RoleMoveCheckout_Request_1062::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleMoveCheckout_Request_1062)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TimeMs;
        break;
      }

      // optional int64 TimeMs = 2;
      case 2: {
        if (tag == 16) {
         parse_TimeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timems_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_NowPoint;
        break;
      }

      // optional .map.Struct_Point3D NowPoint = 3;
      case 3: {
        if (tag == 26) {
         parse_NowPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nowpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleMoveCheckout_Request_1062)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleMoveCheckout_Request_1062)
  return false;
#undef DO_
}

void Map_RoleMoveCheckout_Request_1062::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleMoveCheckout_Request_1062)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timems(), output);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->nowpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleMoveCheckout_Request_1062)
}

::google::protobuf::uint8* Map_RoleMoveCheckout_Request_1062::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleMoveCheckout_Request_1062)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timems(), target);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->nowpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleMoveCheckout_Request_1062)
  return target;
}

int Map_RoleMoveCheckout_Request_1062::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleMoveCheckout_Request_1062)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timems());
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nowpoint_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleMoveCheckout_Request_1062::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleMoveCheckout_Request_1062)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleMoveCheckout_Request_1062* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleMoveCheckout_Request_1062>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleMoveCheckout_Request_1062)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleMoveCheckout_Request_1062)
    MergeFrom(*source);
  }
}

void Map_RoleMoveCheckout_Request_1062::MergeFrom(const Map_RoleMoveCheckout_Request_1062& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleMoveCheckout_Request_1062)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.timems() != 0) {
    set_timems(from.timems());
  }
  if (from.has_nowpoint()) {
    mutable_nowpoint()->::map::Struct_Point3D::MergeFrom(from.nowpoint());
  }
}

void Map_RoleMoveCheckout_Request_1062::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleMoveCheckout_Request_1062)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleMoveCheckout_Request_1062::CopyFrom(const Map_RoleMoveCheckout_Request_1062& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleMoveCheckout_Request_1062)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleMoveCheckout_Request_1062::IsInitialized() const {

  return true;
}

void Map_RoleMoveCheckout_Request_1062::Swap(Map_RoleMoveCheckout_Request_1062* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleMoveCheckout_Request_1062::InternalSwap(Map_RoleMoveCheckout_Request_1062* other) {
  std::swap(roleuid_, other->roleuid_);
  std::swap(timems_, other->timems_);
  std::swap(nowpoint_, other->nowpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleMoveCheckout_Request_1062::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleMoveCheckout_Request_1062_descriptor_;
  metadata.reflection = Map_RoleMoveCheckout_Request_1062_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleMoveCheckout_Request_1062

// optional int64 RoleUid = 1;
void Map_RoleMoveCheckout_Request_1062::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMoveCheckout_Request_1062::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveCheckout_Request_1062.RoleUid)
  return roleuid_;
}
 void Map_RoleMoveCheckout_Request_1062::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMoveCheckout_Request_1062.RoleUid)
}

// optional int64 TimeMs = 2;
void Map_RoleMoveCheckout_Request_1062::clear_timems() {
  timems_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMoveCheckout_Request_1062::timems() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveCheckout_Request_1062.TimeMs)
  return timems_;
}
 void Map_RoleMoveCheckout_Request_1062::set_timems(::google::protobuf::int64 value) {
  
  timems_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMoveCheckout_Request_1062.TimeMs)
}

// optional .map.Struct_Point3D NowPoint = 3;
bool Map_RoleMoveCheckout_Request_1062::has_nowpoint() const {
  return !_is_default_instance_ && nowpoint_ != NULL;
}
void Map_RoleMoveCheckout_Request_1062::clear_nowpoint() {
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}
const ::map::Struct_Point3D& Map_RoleMoveCheckout_Request_1062::nowpoint() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveCheckout_Request_1062.NowPoint)
  return nowpoint_ != NULL ? *nowpoint_ : *default_instance_->nowpoint_;
}
::map::Struct_Point3D* Map_RoleMoveCheckout_Request_1062::mutable_nowpoint() {
  
  if (nowpoint_ == NULL) {
    nowpoint_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleMoveCheckout_Request_1062.NowPoint)
  return nowpoint_;
}
::map::Struct_Point3D* Map_RoleMoveCheckout_Request_1062::release_nowpoint() {
  // @@protoc_insertion_point(field_release:map.Map_RoleMoveCheckout_Request_1062.NowPoint)
  
  ::map::Struct_Point3D* temp = nowpoint_;
  nowpoint_ = NULL;
  return temp;
}
void Map_RoleMoveCheckout_Request_1062::set_allocated_nowpoint(::map::Struct_Point3D* nowpoint) {
  delete nowpoint_;
  nowpoint_ = nowpoint;
  if (nowpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleMoveCheckout_Request_1062.NowPoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleMoveCheckout_Response_1062::kRoleUidFieldNumber;
const int Map_RoleMoveCheckout_Response_1062::kTimeMsFieldNumber;
const int Map_RoleMoveCheckout_Response_1062::kNowPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleMoveCheckout_Response_1062::Map_RoleMoveCheckout_Response_1062()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleMoveCheckout_Response_1062)
}

void Map_RoleMoveCheckout_Response_1062::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nowpoint_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Map_RoleMoveCheckout_Response_1062::Map_RoleMoveCheckout_Response_1062(const Map_RoleMoveCheckout_Response_1062& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleMoveCheckout_Response_1062)
}

void Map_RoleMoveCheckout_Response_1062::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  timems_ = GOOGLE_LONGLONG(0);
  nowpoint_ = NULL;
}

Map_RoleMoveCheckout_Response_1062::~Map_RoleMoveCheckout_Response_1062() {
  // @@protoc_insertion_point(destructor:map.Map_RoleMoveCheckout_Response_1062)
  SharedDtor();
}

void Map_RoleMoveCheckout_Response_1062::SharedDtor() {
  if (this != default_instance_) {
    delete nowpoint_;
  }
}

void Map_RoleMoveCheckout_Response_1062::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleMoveCheckout_Response_1062::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleMoveCheckout_Response_1062_descriptor_;
}

const Map_RoleMoveCheckout_Response_1062& Map_RoleMoveCheckout_Response_1062::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleMoveCheckout_Response_1062* Map_RoleMoveCheckout_Response_1062::default_instance_ = NULL;

Map_RoleMoveCheckout_Response_1062* Map_RoleMoveCheckout_Response_1062::New(::google::protobuf::Arena* arena) const {
  Map_RoleMoveCheckout_Response_1062* n = new Map_RoleMoveCheckout_Response_1062;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleMoveCheckout_Response_1062::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleMoveCheckout_Response_1062)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_RoleMoveCheckout_Response_1062, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_RoleMoveCheckout_Response_1062*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, timems_);
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool Map_RoleMoveCheckout_Response_1062::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleMoveCheckout_Response_1062)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TimeMs;
        break;
      }

      // optional int64 TimeMs = 2;
      case 2: {
        if (tag == 16) {
         parse_TimeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timems_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_NowPoint;
        break;
      }

      // optional .map.Struct_Point3D NowPoint = 3;
      case 3: {
        if (tag == 26) {
         parse_NowPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nowpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleMoveCheckout_Response_1062)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleMoveCheckout_Response_1062)
  return false;
#undef DO_
}

void Map_RoleMoveCheckout_Response_1062::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleMoveCheckout_Response_1062)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timems(), output);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->nowpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleMoveCheckout_Response_1062)
}

::google::protobuf::uint8* Map_RoleMoveCheckout_Response_1062::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleMoveCheckout_Response_1062)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timems(), target);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->nowpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleMoveCheckout_Response_1062)
  return target;
}

int Map_RoleMoveCheckout_Response_1062::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleMoveCheckout_Response_1062)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timems());
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nowpoint_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleMoveCheckout_Response_1062::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleMoveCheckout_Response_1062)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleMoveCheckout_Response_1062* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleMoveCheckout_Response_1062>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleMoveCheckout_Response_1062)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleMoveCheckout_Response_1062)
    MergeFrom(*source);
  }
}

void Map_RoleMoveCheckout_Response_1062::MergeFrom(const Map_RoleMoveCheckout_Response_1062& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleMoveCheckout_Response_1062)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.timems() != 0) {
    set_timems(from.timems());
  }
  if (from.has_nowpoint()) {
    mutable_nowpoint()->::map::Struct_Point3D::MergeFrom(from.nowpoint());
  }
}

void Map_RoleMoveCheckout_Response_1062::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleMoveCheckout_Response_1062)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleMoveCheckout_Response_1062::CopyFrom(const Map_RoleMoveCheckout_Response_1062& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleMoveCheckout_Response_1062)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleMoveCheckout_Response_1062::IsInitialized() const {

  return true;
}

void Map_RoleMoveCheckout_Response_1062::Swap(Map_RoleMoveCheckout_Response_1062* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleMoveCheckout_Response_1062::InternalSwap(Map_RoleMoveCheckout_Response_1062* other) {
  std::swap(roleuid_, other->roleuid_);
  std::swap(timems_, other->timems_);
  std::swap(nowpoint_, other->nowpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleMoveCheckout_Response_1062::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleMoveCheckout_Response_1062_descriptor_;
  metadata.reflection = Map_RoleMoveCheckout_Response_1062_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleMoveCheckout_Response_1062

// optional int64 RoleUid = 1;
void Map_RoleMoveCheckout_Response_1062::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMoveCheckout_Response_1062::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveCheckout_Response_1062.RoleUid)
  return roleuid_;
}
 void Map_RoleMoveCheckout_Response_1062::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMoveCheckout_Response_1062.RoleUid)
}

// optional int64 TimeMs = 2;
void Map_RoleMoveCheckout_Response_1062::clear_timems() {
  timems_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMoveCheckout_Response_1062::timems() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveCheckout_Response_1062.TimeMs)
  return timems_;
}
 void Map_RoleMoveCheckout_Response_1062::set_timems(::google::protobuf::int64 value) {
  
  timems_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMoveCheckout_Response_1062.TimeMs)
}

// optional .map.Struct_Point3D NowPoint = 3;
bool Map_RoleMoveCheckout_Response_1062::has_nowpoint() const {
  return !_is_default_instance_ && nowpoint_ != NULL;
}
void Map_RoleMoveCheckout_Response_1062::clear_nowpoint() {
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}
const ::map::Struct_Point3D& Map_RoleMoveCheckout_Response_1062::nowpoint() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveCheckout_Response_1062.NowPoint)
  return nowpoint_ != NULL ? *nowpoint_ : *default_instance_->nowpoint_;
}
::map::Struct_Point3D* Map_RoleMoveCheckout_Response_1062::mutable_nowpoint() {
  
  if (nowpoint_ == NULL) {
    nowpoint_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleMoveCheckout_Response_1062.NowPoint)
  return nowpoint_;
}
::map::Struct_Point3D* Map_RoleMoveCheckout_Response_1062::release_nowpoint() {
  // @@protoc_insertion_point(field_release:map.Map_RoleMoveCheckout_Response_1062.NowPoint)
  
  ::map::Struct_Point3D* temp = nowpoint_;
  nowpoint_ = NULL;
  return temp;
}
void Map_RoleMoveCheckout_Response_1062::set_allocated_nowpoint(::map::Struct_Point3D* nowpoint) {
  delete nowpoint_;
  nowpoint_ = nowpoint;
  if (nowpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleMoveCheckout_Response_1062.NowPoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RecastSkill_Request_1200::kSkillIDFieldNumber;
const int Map_RecastSkill_Request_1200::kRoleUidFieldNumber;
const int Map_RecastSkill_Request_1200::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RecastSkill_Request_1200::Map_RecastSkill_Request_1200()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RecastSkill_Request_1200)
}

void Map_RecastSkill_Request_1200::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_RecastSkill_Request_1200::Map_RecastSkill_Request_1200(const Map_RecastSkill_Request_1200& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RecastSkill_Request_1200)
}

void Map_RecastSkill_Request_1200::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  skillid_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  targetuid_ = GOOGLE_LONGLONG(0);
}

Map_RecastSkill_Request_1200::~Map_RecastSkill_Request_1200() {
  // @@protoc_insertion_point(destructor:map.Map_RecastSkill_Request_1200)
  SharedDtor();
}

void Map_RecastSkill_Request_1200::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_RecastSkill_Request_1200::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RecastSkill_Request_1200::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RecastSkill_Request_1200_descriptor_;
}

const Map_RecastSkill_Request_1200& Map_RecastSkill_Request_1200::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RecastSkill_Request_1200* Map_RecastSkill_Request_1200::default_instance_ = NULL;

Map_RecastSkill_Request_1200* Map_RecastSkill_Request_1200::New(::google::protobuf::Arena* arena) const {
  Map_RecastSkill_Request_1200* n = new Map_RecastSkill_Request_1200;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RecastSkill_Request_1200::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RecastSkill_Request_1200)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_RecastSkill_Request_1200, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_RecastSkill_Request_1200*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, skillid_);

#undef ZR_HELPER_
#undef ZR_

}

bool Map_RecastSkill_Request_1200::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RecastSkill_Request_1200)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SkillID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleUid;
        break;
      }

      // optional int64 RoleUid = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TargetUid;
        break;
      }

      // optional int64 TargetUid = 3;
      case 3: {
        if (tag == 24) {
         parse_TargetUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &targetuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RecastSkill_Request_1200)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RecastSkill_Request_1200)
  return false;
#undef DO_
}

void Map_RecastSkill_Request_1200::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RecastSkill_Request_1200)
  // optional int32 SkillID = 1;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skillid(), output);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleuid(), output);
  }

  // optional int64 TargetUid = 3;
  if (this->targetuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->targetuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RecastSkill_Request_1200)
}

::google::protobuf::uint8* Map_RecastSkill_Request_1200::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RecastSkill_Request_1200)
  // optional int32 SkillID = 1;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skillid(), target);
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleuid(), target);
  }

  // optional int64 TargetUid = 3;
  if (this->targetuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->targetuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RecastSkill_Request_1200)
  return target;
}

int Map_RecastSkill_Request_1200::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RecastSkill_Request_1200)
  int total_size = 0;

  // optional int32 SkillID = 1;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skillid());
  }

  // optional int64 RoleUid = 2;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional int64 TargetUid = 3;
  if (this->targetuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->targetuid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RecastSkill_Request_1200::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RecastSkill_Request_1200)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RecastSkill_Request_1200* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RecastSkill_Request_1200>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RecastSkill_Request_1200)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RecastSkill_Request_1200)
    MergeFrom(*source);
  }
}

void Map_RecastSkill_Request_1200::MergeFrom(const Map_RecastSkill_Request_1200& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RecastSkill_Request_1200)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.targetuid() != 0) {
    set_targetuid(from.targetuid());
  }
}

void Map_RecastSkill_Request_1200::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RecastSkill_Request_1200)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RecastSkill_Request_1200::CopyFrom(const Map_RecastSkill_Request_1200& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RecastSkill_Request_1200)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RecastSkill_Request_1200::IsInitialized() const {

  return true;
}

void Map_RecastSkill_Request_1200::Swap(Map_RecastSkill_Request_1200* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RecastSkill_Request_1200::InternalSwap(Map_RecastSkill_Request_1200* other) {
  std::swap(skillid_, other->skillid_);
  std::swap(roleuid_, other->roleuid_);
  std::swap(targetuid_, other->targetuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RecastSkill_Request_1200::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RecastSkill_Request_1200_descriptor_;
  metadata.reflection = Map_RecastSkill_Request_1200_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RecastSkill_Request_1200

// optional int32 SkillID = 1;
void Map_RecastSkill_Request_1200::clear_skillid() {
  skillid_ = 0;
}
 ::google::protobuf::int32 Map_RecastSkill_Request_1200::skillid() const {
  // @@protoc_insertion_point(field_get:map.Map_RecastSkill_Request_1200.SkillID)
  return skillid_;
}
 void Map_RecastSkill_Request_1200::set_skillid(::google::protobuf::int32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RecastSkill_Request_1200.SkillID)
}

// optional int64 RoleUid = 2;
void Map_RecastSkill_Request_1200::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RecastSkill_Request_1200::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RecastSkill_Request_1200.RoleUid)
  return roleuid_;
}
 void Map_RecastSkill_Request_1200::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RecastSkill_Request_1200.RoleUid)
}

// optional int64 TargetUid = 3;
void Map_RecastSkill_Request_1200::clear_targetuid() {
  targetuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RecastSkill_Request_1200::targetuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RecastSkill_Request_1200.TargetUid)
  return targetuid_;
}
 void Map_RecastSkill_Request_1200::set_targetuid(::google::protobuf::int64 value) {
  
  targetuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RecastSkill_Request_1200.TargetUid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RecastSkill_Response_1200::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RecastSkill_Response_1200::Map_RecastSkill_Response_1200()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RecastSkill_Response_1200)
}

void Map_RecastSkill_Response_1200::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_RecastSkill_Response_1200::Map_RecastSkill_Response_1200(const Map_RecastSkill_Response_1200& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RecastSkill_Response_1200)
}

void Map_RecastSkill_Response_1200::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errorcode_ = 0;
}

Map_RecastSkill_Response_1200::~Map_RecastSkill_Response_1200() {
  // @@protoc_insertion_point(destructor:map.Map_RecastSkill_Response_1200)
  SharedDtor();
}

void Map_RecastSkill_Response_1200::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_RecastSkill_Response_1200::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RecastSkill_Response_1200::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RecastSkill_Response_1200_descriptor_;
}

const Map_RecastSkill_Response_1200& Map_RecastSkill_Response_1200::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RecastSkill_Response_1200* Map_RecastSkill_Response_1200::default_instance_ = NULL;

Map_RecastSkill_Response_1200* Map_RecastSkill_Response_1200::New(::google::protobuf::Arena* arena) const {
  Map_RecastSkill_Response_1200* n = new Map_RecastSkill_Response_1200;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RecastSkill_Response_1200::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RecastSkill_Response_1200)
  errorcode_ = 0;
}

bool Map_RecastSkill_Response_1200::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RecastSkill_Response_1200)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ErrorCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RecastSkill_Response_1200)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RecastSkill_Response_1200)
  return false;
#undef DO_
}

void Map_RecastSkill_Response_1200::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RecastSkill_Response_1200)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RecastSkill_Response_1200)
}

::google::protobuf::uint8* Map_RecastSkill_Response_1200::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RecastSkill_Response_1200)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RecastSkill_Response_1200)
  return target;
}

int Map_RecastSkill_Response_1200::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RecastSkill_Response_1200)
  int total_size = 0;

  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RecastSkill_Response_1200::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RecastSkill_Response_1200)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RecastSkill_Response_1200* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RecastSkill_Response_1200>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RecastSkill_Response_1200)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RecastSkill_Response_1200)
    MergeFrom(*source);
  }
}

void Map_RecastSkill_Response_1200::MergeFrom(const Map_RecastSkill_Response_1200& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RecastSkill_Response_1200)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
}

void Map_RecastSkill_Response_1200::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RecastSkill_Response_1200)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RecastSkill_Response_1200::CopyFrom(const Map_RecastSkill_Response_1200& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RecastSkill_Response_1200)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RecastSkill_Response_1200::IsInitialized() const {

  return true;
}

void Map_RecastSkill_Response_1200::Swap(Map_RecastSkill_Response_1200* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RecastSkill_Response_1200::InternalSwap(Map_RecastSkill_Response_1200* other) {
  std::swap(errorcode_, other->errorcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RecastSkill_Response_1200::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RecastSkill_Response_1200_descriptor_;
  metadata.reflection = Map_RecastSkill_Response_1200_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RecastSkill_Response_1200

// optional int32 ErrorCode = 1;
void Map_RecastSkill_Response_1200::clear_errorcode() {
  errorcode_ = 0;
}
 ::google::protobuf::int32 Map_RecastSkill_Response_1200::errorcode() const {
  // @@protoc_insertion_point(field_get:map.Map_RecastSkill_Response_1200.ErrorCode)
  return errorcode_;
}
 void Map_RecastSkill_Response_1200::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RecastSkill_Response_1200.ErrorCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleGetAttr_Request_1221::kRoleUidFieldNumber;
const int Map_RoleGetAttr_Request_1221::kAttrIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleGetAttr_Request_1221::Map_RoleGetAttr_Request_1221()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleGetAttr_Request_1221)
}

void Map_RoleGetAttr_Request_1221::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_RoleGetAttr_Request_1221::Map_RoleGetAttr_Request_1221(const Map_RoleGetAttr_Request_1221& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleGetAttr_Request_1221)
}

void Map_RoleGetAttr_Request_1221::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
}

Map_RoleGetAttr_Request_1221::~Map_RoleGetAttr_Request_1221() {
  // @@protoc_insertion_point(destructor:map.Map_RoleGetAttr_Request_1221)
  SharedDtor();
}

void Map_RoleGetAttr_Request_1221::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_RoleGetAttr_Request_1221::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleGetAttr_Request_1221::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleGetAttr_Request_1221_descriptor_;
}

const Map_RoleGetAttr_Request_1221& Map_RoleGetAttr_Request_1221::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleGetAttr_Request_1221* Map_RoleGetAttr_Request_1221::default_instance_ = NULL;

Map_RoleGetAttr_Request_1221* Map_RoleGetAttr_Request_1221::New(::google::protobuf::Arena* arena) const {
  Map_RoleGetAttr_Request_1221* n = new Map_RoleGetAttr_Request_1221;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleGetAttr_Request_1221::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleGetAttr_Request_1221)
  roleuid_ = GOOGLE_LONGLONG(0);
  attrid_.Clear();
}

bool Map_RoleGetAttr_Request_1221::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleGetAttr_Request_1221)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attrId;
        break;
      }

      // repeated int32 attrId = 2;
      case 2: {
        if (tag == 18) {
         parse_attrId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_attrid())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_attrid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleGetAttr_Request_1221)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleGetAttr_Request_1221)
  return false;
#undef DO_
}

void Map_RoleGetAttr_Request_1221::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleGetAttr_Request_1221)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // repeated int32 attrId = 2;
  if (this->attrid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_attrid_cached_byte_size_);
  }
  for (int i = 0; i < this->attrid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->attrid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleGetAttr_Request_1221)
}

::google::protobuf::uint8* Map_RoleGetAttr_Request_1221::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleGetAttr_Request_1221)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // repeated int32 attrId = 2;
  if (this->attrid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _attrid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->attrid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->attrid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleGetAttr_Request_1221)
  return target;
}

int Map_RoleGetAttr_Request_1221::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleGetAttr_Request_1221)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // repeated int32 attrId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->attrid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->attrid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _attrid_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleGetAttr_Request_1221::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleGetAttr_Request_1221)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleGetAttr_Request_1221* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleGetAttr_Request_1221>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleGetAttr_Request_1221)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleGetAttr_Request_1221)
    MergeFrom(*source);
  }
}

void Map_RoleGetAttr_Request_1221::MergeFrom(const Map_RoleGetAttr_Request_1221& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleGetAttr_Request_1221)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  attrid_.MergeFrom(from.attrid_);
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
}

void Map_RoleGetAttr_Request_1221::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleGetAttr_Request_1221)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleGetAttr_Request_1221::CopyFrom(const Map_RoleGetAttr_Request_1221& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleGetAttr_Request_1221)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleGetAttr_Request_1221::IsInitialized() const {

  return true;
}

void Map_RoleGetAttr_Request_1221::Swap(Map_RoleGetAttr_Request_1221* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleGetAttr_Request_1221::InternalSwap(Map_RoleGetAttr_Request_1221* other) {
  std::swap(roleuid_, other->roleuid_);
  attrid_.UnsafeArenaSwap(&other->attrid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleGetAttr_Request_1221::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleGetAttr_Request_1221_descriptor_;
  metadata.reflection = Map_RoleGetAttr_Request_1221_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleGetAttr_Request_1221

// optional int64 RoleUid = 1;
void Map_RoleGetAttr_Request_1221::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleGetAttr_Request_1221::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleGetAttr_Request_1221.RoleUid)
  return roleuid_;
}
 void Map_RoleGetAttr_Request_1221::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleGetAttr_Request_1221.RoleUid)
}

// repeated int32 attrId = 2;
int Map_RoleGetAttr_Request_1221::attrid_size() const {
  return attrid_.size();
}
void Map_RoleGetAttr_Request_1221::clear_attrid() {
  attrid_.Clear();
}
 ::google::protobuf::int32 Map_RoleGetAttr_Request_1221::attrid(int index) const {
  // @@protoc_insertion_point(field_get:map.Map_RoleGetAttr_Request_1221.attrId)
  return attrid_.Get(index);
}
 void Map_RoleGetAttr_Request_1221::set_attrid(int index, ::google::protobuf::int32 value) {
  attrid_.Set(index, value);
  // @@protoc_insertion_point(field_set:map.Map_RoleGetAttr_Request_1221.attrId)
}
 void Map_RoleGetAttr_Request_1221::add_attrid(::google::protobuf::int32 value) {
  attrid_.Add(value);
  // @@protoc_insertion_point(field_add:map.Map_RoleGetAttr_Request_1221.attrId)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Map_RoleGetAttr_Request_1221::attrid() const {
  // @@protoc_insertion_point(field_list:map.Map_RoleGetAttr_Request_1221.attrId)
  return attrid_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Map_RoleGetAttr_Request_1221::mutable_attrid() {
  // @@protoc_insertion_point(field_mutable_list:map.Map_RoleGetAttr_Request_1221.attrId)
  return &attrid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleGetAttr_Response_1221::kErrorCodeFieldNumber;
const int Map_RoleGetAttr_Response_1221::kAttrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleGetAttr_Response_1221::Map_RoleGetAttr_Response_1221()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleGetAttr_Response_1221)
}

void Map_RoleGetAttr_Response_1221::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  attrs_ = const_cast< ::map::Struct_Attr_Basics*>(&::map::Struct_Attr_Basics::default_instance());
}

Map_RoleGetAttr_Response_1221::Map_RoleGetAttr_Response_1221(const Map_RoleGetAttr_Response_1221& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleGetAttr_Response_1221)
}

void Map_RoleGetAttr_Response_1221::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errorcode_ = 0;
  attrs_ = NULL;
}

Map_RoleGetAttr_Response_1221::~Map_RoleGetAttr_Response_1221() {
  // @@protoc_insertion_point(destructor:map.Map_RoleGetAttr_Response_1221)
  SharedDtor();
}

void Map_RoleGetAttr_Response_1221::SharedDtor() {
  if (this != default_instance_) {
    delete attrs_;
  }
}

void Map_RoleGetAttr_Response_1221::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleGetAttr_Response_1221::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleGetAttr_Response_1221_descriptor_;
}

const Map_RoleGetAttr_Response_1221& Map_RoleGetAttr_Response_1221::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleGetAttr_Response_1221* Map_RoleGetAttr_Response_1221::default_instance_ = NULL;

Map_RoleGetAttr_Response_1221* Map_RoleGetAttr_Response_1221::New(::google::protobuf::Arena* arena) const {
  Map_RoleGetAttr_Response_1221* n = new Map_RoleGetAttr_Response_1221;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleGetAttr_Response_1221::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleGetAttr_Response_1221)
  errorcode_ = 0;
  if (GetArenaNoVirtual() == NULL && attrs_ != NULL) delete attrs_;
  attrs_ = NULL;
}

bool Map_RoleGetAttr_Response_1221::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleGetAttr_Response_1221)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ErrorCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attrs;
        break;
      }

      // optional .map.Struct_Attr_Basics attrs = 2;
      case 2: {
        if (tag == 18) {
         parse_attrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attrs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleGetAttr_Response_1221)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleGetAttr_Response_1221)
  return false;
#undef DO_
}

void Map_RoleGetAttr_Response_1221::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleGetAttr_Response_1221)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // optional .map.Struct_Attr_Basics attrs = 2;
  if (this->has_attrs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->attrs_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleGetAttr_Response_1221)
}

::google::protobuf::uint8* Map_RoleGetAttr_Response_1221::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleGetAttr_Response_1221)
  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // optional .map.Struct_Attr_Basics attrs = 2;
  if (this->has_attrs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->attrs_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleGetAttr_Response_1221)
  return target;
}

int Map_RoleGetAttr_Response_1221::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleGetAttr_Response_1221)
  int total_size = 0;

  // optional int32 ErrorCode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  // optional .map.Struct_Attr_Basics attrs = 2;
  if (this->has_attrs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->attrs_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleGetAttr_Response_1221::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleGetAttr_Response_1221)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleGetAttr_Response_1221* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleGetAttr_Response_1221>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleGetAttr_Response_1221)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleGetAttr_Response_1221)
    MergeFrom(*source);
  }
}

void Map_RoleGetAttr_Response_1221::MergeFrom(const Map_RoleGetAttr_Response_1221& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleGetAttr_Response_1221)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
  if (from.has_attrs()) {
    mutable_attrs()->::map::Struct_Attr_Basics::MergeFrom(from.attrs());
  }
}

void Map_RoleGetAttr_Response_1221::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleGetAttr_Response_1221)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleGetAttr_Response_1221::CopyFrom(const Map_RoleGetAttr_Response_1221& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleGetAttr_Response_1221)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleGetAttr_Response_1221::IsInitialized() const {

  return true;
}

void Map_RoleGetAttr_Response_1221::Swap(Map_RoleGetAttr_Response_1221* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleGetAttr_Response_1221::InternalSwap(Map_RoleGetAttr_Response_1221* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(attrs_, other->attrs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleGetAttr_Response_1221::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleGetAttr_Response_1221_descriptor_;
  metadata.reflection = Map_RoleGetAttr_Response_1221_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleGetAttr_Response_1221

// optional int32 ErrorCode = 1;
void Map_RoleGetAttr_Response_1221::clear_errorcode() {
  errorcode_ = 0;
}
 ::google::protobuf::int32 Map_RoleGetAttr_Response_1221::errorcode() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleGetAttr_Response_1221.ErrorCode)
  return errorcode_;
}
 void Map_RoleGetAttr_Response_1221::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleGetAttr_Response_1221.ErrorCode)
}

// optional .map.Struct_Attr_Basics attrs = 2;
bool Map_RoleGetAttr_Response_1221::has_attrs() const {
  return !_is_default_instance_ && attrs_ != NULL;
}
void Map_RoleGetAttr_Response_1221::clear_attrs() {
  if (GetArenaNoVirtual() == NULL && attrs_ != NULL) delete attrs_;
  attrs_ = NULL;
}
const ::map::Struct_Attr_Basics& Map_RoleGetAttr_Response_1221::attrs() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleGetAttr_Response_1221.attrs)
  return attrs_ != NULL ? *attrs_ : *default_instance_->attrs_;
}
::map::Struct_Attr_Basics* Map_RoleGetAttr_Response_1221::mutable_attrs() {
  
  if (attrs_ == NULL) {
    attrs_ = new ::map::Struct_Attr_Basics;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleGetAttr_Response_1221.attrs)
  return attrs_;
}
::map::Struct_Attr_Basics* Map_RoleGetAttr_Response_1221::release_attrs() {
  // @@protoc_insertion_point(field_release:map.Map_RoleGetAttr_Response_1221.attrs)
  
  ::map::Struct_Attr_Basics* temp = attrs_;
  attrs_ = NULL;
  return temp;
}
void Map_RoleGetAttr_Response_1221::set_allocated_attrs(::map::Struct_Attr_Basics* attrs) {
  delete attrs_;
  attrs_ = attrs;
  if (attrs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleGetAttr_Response_1221.attrs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleEnterMap_Broadcast_1101::kRoleUidFieldNumber;
const int Map_RoleEnterMap_Broadcast_1101::kAngleFieldNumber;
const int Map_RoleEnterMap_Broadcast_1101::kNowPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleEnterMap_Broadcast_1101::Map_RoleEnterMap_Broadcast_1101()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleEnterMap_Broadcast_1101)
}

void Map_RoleEnterMap_Broadcast_1101::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nowpoint_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Map_RoleEnterMap_Broadcast_1101::Map_RoleEnterMap_Broadcast_1101(const Map_RoleEnterMap_Broadcast_1101& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleEnterMap_Broadcast_1101)
}

void Map_RoleEnterMap_Broadcast_1101::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  angle_ = 0;
  nowpoint_ = NULL;
}

Map_RoleEnterMap_Broadcast_1101::~Map_RoleEnterMap_Broadcast_1101() {
  // @@protoc_insertion_point(destructor:map.Map_RoleEnterMap_Broadcast_1101)
  SharedDtor();
}

void Map_RoleEnterMap_Broadcast_1101::SharedDtor() {
  if (this != default_instance_) {
    delete nowpoint_;
  }
}

void Map_RoleEnterMap_Broadcast_1101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleEnterMap_Broadcast_1101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleEnterMap_Broadcast_1101_descriptor_;
}

const Map_RoleEnterMap_Broadcast_1101& Map_RoleEnterMap_Broadcast_1101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleEnterMap_Broadcast_1101* Map_RoleEnterMap_Broadcast_1101::default_instance_ = NULL;

Map_RoleEnterMap_Broadcast_1101* Map_RoleEnterMap_Broadcast_1101::New(::google::protobuf::Arena* arena) const {
  Map_RoleEnterMap_Broadcast_1101* n = new Map_RoleEnterMap_Broadcast_1101;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleEnterMap_Broadcast_1101::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleEnterMap_Broadcast_1101)
  roleuid_ = GOOGLE_LONGLONG(0);
  angle_ = 0;
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}

bool Map_RoleEnterMap_Broadcast_1101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleEnterMap_Broadcast_1101)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_Angle;
        break;
      }

      // optional float Angle = 2;
      case 2: {
        if (tag == 21) {
         parse_Angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_NowPoint;
        break;
      }

      // optional .map.Struct_Point3D NowPoint = 3;
      case 3: {
        if (tag == 26) {
         parse_NowPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nowpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleEnterMap_Broadcast_1101)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleEnterMap_Broadcast_1101)
  return false;
#undef DO_
}

void Map_RoleEnterMap_Broadcast_1101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleEnterMap_Broadcast_1101)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // optional float Angle = 2;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->angle(), output);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->nowpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleEnterMap_Broadcast_1101)
}

::google::protobuf::uint8* Map_RoleEnterMap_Broadcast_1101::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleEnterMap_Broadcast_1101)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // optional float Angle = 2;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->angle(), target);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->nowpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleEnterMap_Broadcast_1101)
  return target;
}

int Map_RoleEnterMap_Broadcast_1101::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleEnterMap_Broadcast_1101)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional float Angle = 2;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nowpoint_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleEnterMap_Broadcast_1101::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleEnterMap_Broadcast_1101)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleEnterMap_Broadcast_1101* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleEnterMap_Broadcast_1101>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleEnterMap_Broadcast_1101)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleEnterMap_Broadcast_1101)
    MergeFrom(*source);
  }
}

void Map_RoleEnterMap_Broadcast_1101::MergeFrom(const Map_RoleEnterMap_Broadcast_1101& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleEnterMap_Broadcast_1101)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.has_nowpoint()) {
    mutable_nowpoint()->::map::Struct_Point3D::MergeFrom(from.nowpoint());
  }
}

void Map_RoleEnterMap_Broadcast_1101::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleEnterMap_Broadcast_1101)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleEnterMap_Broadcast_1101::CopyFrom(const Map_RoleEnterMap_Broadcast_1101& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleEnterMap_Broadcast_1101)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleEnterMap_Broadcast_1101::IsInitialized() const {

  return true;
}

void Map_RoleEnterMap_Broadcast_1101::Swap(Map_RoleEnterMap_Broadcast_1101* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleEnterMap_Broadcast_1101::InternalSwap(Map_RoleEnterMap_Broadcast_1101* other) {
  std::swap(roleuid_, other->roleuid_);
  std::swap(angle_, other->angle_);
  std::swap(nowpoint_, other->nowpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleEnterMap_Broadcast_1101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleEnterMap_Broadcast_1101_descriptor_;
  metadata.reflection = Map_RoleEnterMap_Broadcast_1101_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleEnterMap_Broadcast_1101

// optional int64 RoleUid = 1;
void Map_RoleEnterMap_Broadcast_1101::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleEnterMap_Broadcast_1101::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleEnterMap_Broadcast_1101.RoleUid)
  return roleuid_;
}
 void Map_RoleEnterMap_Broadcast_1101::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleEnterMap_Broadcast_1101.RoleUid)
}

// optional float Angle = 2;
void Map_RoleEnterMap_Broadcast_1101::clear_angle() {
  angle_ = 0;
}
 float Map_RoleEnterMap_Broadcast_1101::angle() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleEnterMap_Broadcast_1101.Angle)
  return angle_;
}
 void Map_RoleEnterMap_Broadcast_1101::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleEnterMap_Broadcast_1101.Angle)
}

// optional .map.Struct_Point3D NowPoint = 3;
bool Map_RoleEnterMap_Broadcast_1101::has_nowpoint() const {
  return !_is_default_instance_ && nowpoint_ != NULL;
}
void Map_RoleEnterMap_Broadcast_1101::clear_nowpoint() {
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}
const ::map::Struct_Point3D& Map_RoleEnterMap_Broadcast_1101::nowpoint() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleEnterMap_Broadcast_1101.NowPoint)
  return nowpoint_ != NULL ? *nowpoint_ : *default_instance_->nowpoint_;
}
::map::Struct_Point3D* Map_RoleEnterMap_Broadcast_1101::mutable_nowpoint() {
  
  if (nowpoint_ == NULL) {
    nowpoint_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleEnterMap_Broadcast_1101.NowPoint)
  return nowpoint_;
}
::map::Struct_Point3D* Map_RoleEnterMap_Broadcast_1101::release_nowpoint() {
  // @@protoc_insertion_point(field_release:map.Map_RoleEnterMap_Broadcast_1101.NowPoint)
  
  ::map::Struct_Point3D* temp = nowpoint_;
  nowpoint_ = NULL;
  return temp;
}
void Map_RoleEnterMap_Broadcast_1101::set_allocated_nowpoint(::map::Struct_Point3D* nowpoint) {
  delete nowpoint_;
  nowpoint_ = nowpoint;
  if (nowpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleEnterMap_Broadcast_1101.NowPoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleMove_Broadcast_1111::kRoleUidFieldNumber;
const int Map_RoleMove_Broadcast_1111::kTimeMsFieldNumber;
const int Map_RoleMove_Broadcast_1111::kAngleFieldNumber;
const int Map_RoleMove_Broadcast_1111::kNowPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleMove_Broadcast_1111::Map_RoleMove_Broadcast_1111()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleMove_Broadcast_1111)
}

void Map_RoleMove_Broadcast_1111::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nowpoint_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Map_RoleMove_Broadcast_1111::Map_RoleMove_Broadcast_1111(const Map_RoleMove_Broadcast_1111& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleMove_Broadcast_1111)
}

void Map_RoleMove_Broadcast_1111::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  timems_ = GOOGLE_LONGLONG(0);
  angle_ = 0;
  nowpoint_ = NULL;
}

Map_RoleMove_Broadcast_1111::~Map_RoleMove_Broadcast_1111() {
  // @@protoc_insertion_point(destructor:map.Map_RoleMove_Broadcast_1111)
  SharedDtor();
}

void Map_RoleMove_Broadcast_1111::SharedDtor() {
  if (this != default_instance_) {
    delete nowpoint_;
  }
}

void Map_RoleMove_Broadcast_1111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleMove_Broadcast_1111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleMove_Broadcast_1111_descriptor_;
}

const Map_RoleMove_Broadcast_1111& Map_RoleMove_Broadcast_1111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleMove_Broadcast_1111* Map_RoleMove_Broadcast_1111::default_instance_ = NULL;

Map_RoleMove_Broadcast_1111* Map_RoleMove_Broadcast_1111::New(::google::protobuf::Arena* arena) const {
  Map_RoleMove_Broadcast_1111* n = new Map_RoleMove_Broadcast_1111;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleMove_Broadcast_1111::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleMove_Broadcast_1111)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_RoleMove_Broadcast_1111, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_RoleMove_Broadcast_1111*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, timems_);
  angle_ = 0;
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool Map_RoleMove_Broadcast_1111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleMove_Broadcast_1111)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TimeMs;
        break;
      }

      // optional int64 TimeMs = 2;
      case 2: {
        if (tag == 16) {
         parse_TimeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timems_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_Angle;
        break;
      }

      // optional float Angle = 3;
      case 3: {
        if (tag == 29) {
         parse_Angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_NowPoint;
        break;
      }

      // optional .map.Struct_Point3D NowPoint = 4;
      case 4: {
        if (tag == 34) {
         parse_NowPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nowpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleMove_Broadcast_1111)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleMove_Broadcast_1111)
  return false;
#undef DO_
}

void Map_RoleMove_Broadcast_1111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleMove_Broadcast_1111)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timems(), output);
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle(), output);
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->nowpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleMove_Broadcast_1111)
}

::google::protobuf::uint8* Map_RoleMove_Broadcast_1111::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleMove_Broadcast_1111)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timems(), target);
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle(), target);
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->nowpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleMove_Broadcast_1111)
  return target;
}

int Map_RoleMove_Broadcast_1111::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleMove_Broadcast_1111)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timems());
  }

  // optional float Angle = 3;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // optional .map.Struct_Point3D NowPoint = 4;
  if (this->has_nowpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nowpoint_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleMove_Broadcast_1111::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleMove_Broadcast_1111)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleMove_Broadcast_1111* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleMove_Broadcast_1111>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleMove_Broadcast_1111)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleMove_Broadcast_1111)
    MergeFrom(*source);
  }
}

void Map_RoleMove_Broadcast_1111::MergeFrom(const Map_RoleMove_Broadcast_1111& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleMove_Broadcast_1111)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.timems() != 0) {
    set_timems(from.timems());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.has_nowpoint()) {
    mutable_nowpoint()->::map::Struct_Point3D::MergeFrom(from.nowpoint());
  }
}

void Map_RoleMove_Broadcast_1111::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleMove_Broadcast_1111)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleMove_Broadcast_1111::CopyFrom(const Map_RoleMove_Broadcast_1111& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleMove_Broadcast_1111)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleMove_Broadcast_1111::IsInitialized() const {

  return true;
}

void Map_RoleMove_Broadcast_1111::Swap(Map_RoleMove_Broadcast_1111* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleMove_Broadcast_1111::InternalSwap(Map_RoleMove_Broadcast_1111* other) {
  std::swap(roleuid_, other->roleuid_);
  std::swap(timems_, other->timems_);
  std::swap(angle_, other->angle_);
  std::swap(nowpoint_, other->nowpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleMove_Broadcast_1111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleMove_Broadcast_1111_descriptor_;
  metadata.reflection = Map_RoleMove_Broadcast_1111_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleMove_Broadcast_1111

// optional int64 RoleUid = 1;
void Map_RoleMove_Broadcast_1111::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMove_Broadcast_1111::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMove_Broadcast_1111.RoleUid)
  return roleuid_;
}
 void Map_RoleMove_Broadcast_1111::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMove_Broadcast_1111.RoleUid)
}

// optional int64 TimeMs = 2;
void Map_RoleMove_Broadcast_1111::clear_timems() {
  timems_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMove_Broadcast_1111::timems() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMove_Broadcast_1111.TimeMs)
  return timems_;
}
 void Map_RoleMove_Broadcast_1111::set_timems(::google::protobuf::int64 value) {
  
  timems_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMove_Broadcast_1111.TimeMs)
}

// optional float Angle = 3;
void Map_RoleMove_Broadcast_1111::clear_angle() {
  angle_ = 0;
}
 float Map_RoleMove_Broadcast_1111::angle() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMove_Broadcast_1111.Angle)
  return angle_;
}
 void Map_RoleMove_Broadcast_1111::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMove_Broadcast_1111.Angle)
}

// optional .map.Struct_Point3D NowPoint = 4;
bool Map_RoleMove_Broadcast_1111::has_nowpoint() const {
  return !_is_default_instance_ && nowpoint_ != NULL;
}
void Map_RoleMove_Broadcast_1111::clear_nowpoint() {
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}
const ::map::Struct_Point3D& Map_RoleMove_Broadcast_1111::nowpoint() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMove_Broadcast_1111.NowPoint)
  return nowpoint_ != NULL ? *nowpoint_ : *default_instance_->nowpoint_;
}
::map::Struct_Point3D* Map_RoleMove_Broadcast_1111::mutable_nowpoint() {
  
  if (nowpoint_ == NULL) {
    nowpoint_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleMove_Broadcast_1111.NowPoint)
  return nowpoint_;
}
::map::Struct_Point3D* Map_RoleMove_Broadcast_1111::release_nowpoint() {
  // @@protoc_insertion_point(field_release:map.Map_RoleMove_Broadcast_1111.NowPoint)
  
  ::map::Struct_Point3D* temp = nowpoint_;
  nowpoint_ = NULL;
  return temp;
}
void Map_RoleMove_Broadcast_1111::set_allocated_nowpoint(::map::Struct_Point3D* nowpoint) {
  delete nowpoint_;
  nowpoint_ = nowpoint;
  if (nowpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleMove_Broadcast_1111.NowPoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleStop_Broadcast_1112::kRoleUidFieldNumber;
const int Map_RoleStop_Broadcast_1112::kAngleFieldNumber;
const int Map_RoleStop_Broadcast_1112::kNowPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleStop_Broadcast_1112::Map_RoleStop_Broadcast_1112()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleStop_Broadcast_1112)
}

void Map_RoleStop_Broadcast_1112::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nowpoint_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Map_RoleStop_Broadcast_1112::Map_RoleStop_Broadcast_1112(const Map_RoleStop_Broadcast_1112& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleStop_Broadcast_1112)
}

void Map_RoleStop_Broadcast_1112::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  angle_ = 0;
  nowpoint_ = NULL;
}

Map_RoleStop_Broadcast_1112::~Map_RoleStop_Broadcast_1112() {
  // @@protoc_insertion_point(destructor:map.Map_RoleStop_Broadcast_1112)
  SharedDtor();
}

void Map_RoleStop_Broadcast_1112::SharedDtor() {
  if (this != default_instance_) {
    delete nowpoint_;
  }
}

void Map_RoleStop_Broadcast_1112::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleStop_Broadcast_1112::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleStop_Broadcast_1112_descriptor_;
}

const Map_RoleStop_Broadcast_1112& Map_RoleStop_Broadcast_1112::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleStop_Broadcast_1112* Map_RoleStop_Broadcast_1112::default_instance_ = NULL;

Map_RoleStop_Broadcast_1112* Map_RoleStop_Broadcast_1112::New(::google::protobuf::Arena* arena) const {
  Map_RoleStop_Broadcast_1112* n = new Map_RoleStop_Broadcast_1112;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleStop_Broadcast_1112::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleStop_Broadcast_1112)
  roleuid_ = GOOGLE_LONGLONG(0);
  angle_ = 0;
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}

bool Map_RoleStop_Broadcast_1112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleStop_Broadcast_1112)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_Angle;
        break;
      }

      // optional float Angle = 2;
      case 2: {
        if (tag == 21) {
         parse_Angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_NowPoint;
        break;
      }

      // optional .map.Struct_Point3D NowPoint = 3;
      case 3: {
        if (tag == 26) {
         parse_NowPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nowpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleStop_Broadcast_1112)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleStop_Broadcast_1112)
  return false;
#undef DO_
}

void Map_RoleStop_Broadcast_1112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleStop_Broadcast_1112)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // optional float Angle = 2;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->angle(), output);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->nowpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleStop_Broadcast_1112)
}

::google::protobuf::uint8* Map_RoleStop_Broadcast_1112::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleStop_Broadcast_1112)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // optional float Angle = 2;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->angle(), target);
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->nowpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleStop_Broadcast_1112)
  return target;
}

int Map_RoleStop_Broadcast_1112::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleStop_Broadcast_1112)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional float Angle = 2;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // optional .map.Struct_Point3D NowPoint = 3;
  if (this->has_nowpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nowpoint_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleStop_Broadcast_1112::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleStop_Broadcast_1112)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleStop_Broadcast_1112* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleStop_Broadcast_1112>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleStop_Broadcast_1112)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleStop_Broadcast_1112)
    MergeFrom(*source);
  }
}

void Map_RoleStop_Broadcast_1112::MergeFrom(const Map_RoleStop_Broadcast_1112& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleStop_Broadcast_1112)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.has_nowpoint()) {
    mutable_nowpoint()->::map::Struct_Point3D::MergeFrom(from.nowpoint());
  }
}

void Map_RoleStop_Broadcast_1112::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleStop_Broadcast_1112)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleStop_Broadcast_1112::CopyFrom(const Map_RoleStop_Broadcast_1112& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleStop_Broadcast_1112)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleStop_Broadcast_1112::IsInitialized() const {

  return true;
}

void Map_RoleStop_Broadcast_1112::Swap(Map_RoleStop_Broadcast_1112* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleStop_Broadcast_1112::InternalSwap(Map_RoleStop_Broadcast_1112* other) {
  std::swap(roleuid_, other->roleuid_);
  std::swap(angle_, other->angle_);
  std::swap(nowpoint_, other->nowpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleStop_Broadcast_1112::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleStop_Broadcast_1112_descriptor_;
  metadata.reflection = Map_RoleStop_Broadcast_1112_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleStop_Broadcast_1112

// optional int64 RoleUid = 1;
void Map_RoleStop_Broadcast_1112::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleStop_Broadcast_1112::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleStop_Broadcast_1112.RoleUid)
  return roleuid_;
}
 void Map_RoleStop_Broadcast_1112::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleStop_Broadcast_1112.RoleUid)
}

// optional float Angle = 2;
void Map_RoleStop_Broadcast_1112::clear_angle() {
  angle_ = 0;
}
 float Map_RoleStop_Broadcast_1112::angle() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleStop_Broadcast_1112.Angle)
  return angle_;
}
 void Map_RoleStop_Broadcast_1112::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleStop_Broadcast_1112.Angle)
}

// optional .map.Struct_Point3D NowPoint = 3;
bool Map_RoleStop_Broadcast_1112::has_nowpoint() const {
  return !_is_default_instance_ && nowpoint_ != NULL;
}
void Map_RoleStop_Broadcast_1112::clear_nowpoint() {
  if (GetArenaNoVirtual() == NULL && nowpoint_ != NULL) delete nowpoint_;
  nowpoint_ = NULL;
}
const ::map::Struct_Point3D& Map_RoleStop_Broadcast_1112::nowpoint() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleStop_Broadcast_1112.NowPoint)
  return nowpoint_ != NULL ? *nowpoint_ : *default_instance_->nowpoint_;
}
::map::Struct_Point3D* Map_RoleStop_Broadcast_1112::mutable_nowpoint() {
  
  if (nowpoint_ == NULL) {
    nowpoint_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleStop_Broadcast_1112.NowPoint)
  return nowpoint_;
}
::map::Struct_Point3D* Map_RoleStop_Broadcast_1112::release_nowpoint() {
  // @@protoc_insertion_point(field_release:map.Map_RoleStop_Broadcast_1112.NowPoint)
  
  ::map::Struct_Point3D* temp = nowpoint_;
  nowpoint_ = NULL;
  return temp;
}
void Map_RoleStop_Broadcast_1112::set_allocated_nowpoint(::map::Struct_Point3D* nowpoint) {
  delete nowpoint_;
  nowpoint_ = nowpoint;
  if (nowpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleStop_Broadcast_1112.NowPoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleMoveToPosition_Broadcast_1121::kRoleUidFieldNumber;
const int Map_RoleMoveToPosition_Broadcast_1121::kTimeMsFieldNumber;
const int Map_RoleMoveToPosition_Broadcast_1121::kStartPositionFieldNumber;
const int Map_RoleMoveToPosition_Broadcast_1121::kToPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleMoveToPosition_Broadcast_1121::Map_RoleMoveToPosition_Broadcast_1121()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleMoveToPosition_Broadcast_1121)
}

void Map_RoleMoveToPosition_Broadcast_1121::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  startposition_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
  toposition_ = const_cast< ::map::Struct_Point3D*>(&::map::Struct_Point3D::default_instance());
}

Map_RoleMoveToPosition_Broadcast_1121::Map_RoleMoveToPosition_Broadcast_1121(const Map_RoleMoveToPosition_Broadcast_1121& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleMoveToPosition_Broadcast_1121)
}

void Map_RoleMoveToPosition_Broadcast_1121::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
  timems_ = GOOGLE_LONGLONG(0);
  startposition_ = NULL;
  toposition_ = NULL;
}

Map_RoleMoveToPosition_Broadcast_1121::~Map_RoleMoveToPosition_Broadcast_1121() {
  // @@protoc_insertion_point(destructor:map.Map_RoleMoveToPosition_Broadcast_1121)
  SharedDtor();
}

void Map_RoleMoveToPosition_Broadcast_1121::SharedDtor() {
  if (this != default_instance_) {
    delete startposition_;
    delete toposition_;
  }
}

void Map_RoleMoveToPosition_Broadcast_1121::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleMoveToPosition_Broadcast_1121::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleMoveToPosition_Broadcast_1121_descriptor_;
}

const Map_RoleMoveToPosition_Broadcast_1121& Map_RoleMoveToPosition_Broadcast_1121::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleMoveToPosition_Broadcast_1121* Map_RoleMoveToPosition_Broadcast_1121::default_instance_ = NULL;

Map_RoleMoveToPosition_Broadcast_1121* Map_RoleMoveToPosition_Broadcast_1121::New(::google::protobuf::Arena* arena) const {
  Map_RoleMoveToPosition_Broadcast_1121* n = new Map_RoleMoveToPosition_Broadcast_1121;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleMoveToPosition_Broadcast_1121::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleMoveToPosition_Broadcast_1121)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Map_RoleMoveToPosition_Broadcast_1121, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Map_RoleMoveToPosition_Broadcast_1121*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleuid_, timems_);
  if (GetArenaNoVirtual() == NULL && startposition_ != NULL) delete startposition_;
  startposition_ = NULL;
  if (GetArenaNoVirtual() == NULL && toposition_ != NULL) delete toposition_;
  toposition_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool Map_RoleMoveToPosition_Broadcast_1121::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleMoveToPosition_Broadcast_1121)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TimeMs;
        break;
      }

      // optional int64 TimeMs = 2;
      case 2: {
        if (tag == 16) {
         parse_TimeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timems_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_StartPosition;
        break;
      }

      // optional .map.Struct_Point3D StartPosition = 3;
      case 3: {
        if (tag == 26) {
         parse_StartPosition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_startposition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ToPosition;
        break;
      }

      // optional .map.Struct_Point3D ToPosition = 4;
      case 4: {
        if (tag == 34) {
         parse_ToPosition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_toposition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleMoveToPosition_Broadcast_1121)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleMoveToPosition_Broadcast_1121)
  return false;
#undef DO_
}

void Map_RoleMoveToPosition_Broadcast_1121::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleMoveToPosition_Broadcast_1121)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timems(), output);
  }

  // optional .map.Struct_Point3D StartPosition = 3;
  if (this->has_startposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->startposition_, output);
  }

  // optional .map.Struct_Point3D ToPosition = 4;
  if (this->has_toposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->toposition_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleMoveToPosition_Broadcast_1121)
}

::google::protobuf::uint8* Map_RoleMoveToPosition_Broadcast_1121::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleMoveToPosition_Broadcast_1121)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timems(), target);
  }

  // optional .map.Struct_Point3D StartPosition = 3;
  if (this->has_startposition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->startposition_, false, target);
  }

  // optional .map.Struct_Point3D ToPosition = 4;
  if (this->has_toposition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->toposition_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleMoveToPosition_Broadcast_1121)
  return target;
}

int Map_RoleMoveToPosition_Broadcast_1121::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleMoveToPosition_Broadcast_1121)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  // optional int64 TimeMs = 2;
  if (this->timems() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timems());
  }

  // optional .map.Struct_Point3D StartPosition = 3;
  if (this->has_startposition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->startposition_);
  }

  // optional .map.Struct_Point3D ToPosition = 4;
  if (this->has_toposition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->toposition_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleMoveToPosition_Broadcast_1121::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleMoveToPosition_Broadcast_1121)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleMoveToPosition_Broadcast_1121* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleMoveToPosition_Broadcast_1121>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleMoveToPosition_Broadcast_1121)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleMoveToPosition_Broadcast_1121)
    MergeFrom(*source);
  }
}

void Map_RoleMoveToPosition_Broadcast_1121::MergeFrom(const Map_RoleMoveToPosition_Broadcast_1121& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleMoveToPosition_Broadcast_1121)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
  if (from.timems() != 0) {
    set_timems(from.timems());
  }
  if (from.has_startposition()) {
    mutable_startposition()->::map::Struct_Point3D::MergeFrom(from.startposition());
  }
  if (from.has_toposition()) {
    mutable_toposition()->::map::Struct_Point3D::MergeFrom(from.toposition());
  }
}

void Map_RoleMoveToPosition_Broadcast_1121::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleMoveToPosition_Broadcast_1121)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleMoveToPosition_Broadcast_1121::CopyFrom(const Map_RoleMoveToPosition_Broadcast_1121& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleMoveToPosition_Broadcast_1121)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleMoveToPosition_Broadcast_1121::IsInitialized() const {

  return true;
}

void Map_RoleMoveToPosition_Broadcast_1121::Swap(Map_RoleMoveToPosition_Broadcast_1121* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleMoveToPosition_Broadcast_1121::InternalSwap(Map_RoleMoveToPosition_Broadcast_1121* other) {
  std::swap(roleuid_, other->roleuid_);
  std::swap(timems_, other->timems_);
  std::swap(startposition_, other->startposition_);
  std::swap(toposition_, other->toposition_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleMoveToPosition_Broadcast_1121::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleMoveToPosition_Broadcast_1121_descriptor_;
  metadata.reflection = Map_RoleMoveToPosition_Broadcast_1121_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleMoveToPosition_Broadcast_1121

// optional int64 RoleUid = 1;
void Map_RoleMoveToPosition_Broadcast_1121::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMoveToPosition_Broadcast_1121::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveToPosition_Broadcast_1121.RoleUid)
  return roleuid_;
}
 void Map_RoleMoveToPosition_Broadcast_1121::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMoveToPosition_Broadcast_1121.RoleUid)
}

// optional int64 TimeMs = 2;
void Map_RoleMoveToPosition_Broadcast_1121::clear_timems() {
  timems_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleMoveToPosition_Broadcast_1121::timems() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveToPosition_Broadcast_1121.TimeMs)
  return timems_;
}
 void Map_RoleMoveToPosition_Broadcast_1121::set_timems(::google::protobuf::int64 value) {
  
  timems_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleMoveToPosition_Broadcast_1121.TimeMs)
}

// optional .map.Struct_Point3D StartPosition = 3;
bool Map_RoleMoveToPosition_Broadcast_1121::has_startposition() const {
  return !_is_default_instance_ && startposition_ != NULL;
}
void Map_RoleMoveToPosition_Broadcast_1121::clear_startposition() {
  if (GetArenaNoVirtual() == NULL && startposition_ != NULL) delete startposition_;
  startposition_ = NULL;
}
const ::map::Struct_Point3D& Map_RoleMoveToPosition_Broadcast_1121::startposition() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveToPosition_Broadcast_1121.StartPosition)
  return startposition_ != NULL ? *startposition_ : *default_instance_->startposition_;
}
::map::Struct_Point3D* Map_RoleMoveToPosition_Broadcast_1121::mutable_startposition() {
  
  if (startposition_ == NULL) {
    startposition_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleMoveToPosition_Broadcast_1121.StartPosition)
  return startposition_;
}
::map::Struct_Point3D* Map_RoleMoveToPosition_Broadcast_1121::release_startposition() {
  // @@protoc_insertion_point(field_release:map.Map_RoleMoveToPosition_Broadcast_1121.StartPosition)
  
  ::map::Struct_Point3D* temp = startposition_;
  startposition_ = NULL;
  return temp;
}
void Map_RoleMoveToPosition_Broadcast_1121::set_allocated_startposition(::map::Struct_Point3D* startposition) {
  delete startposition_;
  startposition_ = startposition;
  if (startposition) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleMoveToPosition_Broadcast_1121.StartPosition)
}

// optional .map.Struct_Point3D ToPosition = 4;
bool Map_RoleMoveToPosition_Broadcast_1121::has_toposition() const {
  return !_is_default_instance_ && toposition_ != NULL;
}
void Map_RoleMoveToPosition_Broadcast_1121::clear_toposition() {
  if (GetArenaNoVirtual() == NULL && toposition_ != NULL) delete toposition_;
  toposition_ = NULL;
}
const ::map::Struct_Point3D& Map_RoleMoveToPosition_Broadcast_1121::toposition() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleMoveToPosition_Broadcast_1121.ToPosition)
  return toposition_ != NULL ? *toposition_ : *default_instance_->toposition_;
}
::map::Struct_Point3D* Map_RoleMoveToPosition_Broadcast_1121::mutable_toposition() {
  
  if (toposition_ == NULL) {
    toposition_ = new ::map::Struct_Point3D;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_RoleMoveToPosition_Broadcast_1121.ToPosition)
  return toposition_;
}
::map::Struct_Point3D* Map_RoleMoveToPosition_Broadcast_1121::release_toposition() {
  // @@protoc_insertion_point(field_release:map.Map_RoleMoveToPosition_Broadcast_1121.ToPosition)
  
  ::map::Struct_Point3D* temp = toposition_;
  toposition_ = NULL;
  return temp;
}
void Map_RoleMoveToPosition_Broadcast_1121::set_allocated_toposition(::map::Struct_Point3D* toposition) {
  delete toposition_;
  toposition_ = toposition;
  if (toposition) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_RoleMoveToPosition_Broadcast_1121.ToPosition)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_RoleRemove_Broadcast_1151::kRoleUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_RoleRemove_Broadcast_1151::Map_RoleRemove_Broadcast_1151()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_RoleRemove_Broadcast_1151)
}

void Map_RoleRemove_Broadcast_1151::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Map_RoleRemove_Broadcast_1151::Map_RoleRemove_Broadcast_1151(const Map_RoleRemove_Broadcast_1151& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_RoleRemove_Broadcast_1151)
}

void Map_RoleRemove_Broadcast_1151::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleuid_ = GOOGLE_LONGLONG(0);
}

Map_RoleRemove_Broadcast_1151::~Map_RoleRemove_Broadcast_1151() {
  // @@protoc_insertion_point(destructor:map.Map_RoleRemove_Broadcast_1151)
  SharedDtor();
}

void Map_RoleRemove_Broadcast_1151::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Map_RoleRemove_Broadcast_1151::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_RoleRemove_Broadcast_1151::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_RoleRemove_Broadcast_1151_descriptor_;
}

const Map_RoleRemove_Broadcast_1151& Map_RoleRemove_Broadcast_1151::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_RoleRemove_Broadcast_1151* Map_RoleRemove_Broadcast_1151::default_instance_ = NULL;

Map_RoleRemove_Broadcast_1151* Map_RoleRemove_Broadcast_1151::New(::google::protobuf::Arena* arena) const {
  Map_RoleRemove_Broadcast_1151* n = new Map_RoleRemove_Broadcast_1151;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_RoleRemove_Broadcast_1151::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_RoleRemove_Broadcast_1151)
  roleuid_ = GOOGLE_LONGLONG(0);
}

bool Map_RoleRemove_Broadcast_1151::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_RoleRemove_Broadcast_1151)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_RoleRemove_Broadcast_1151)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_RoleRemove_Broadcast_1151)
  return false;
#undef DO_
}

void Map_RoleRemove_Broadcast_1151::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_RoleRemove_Broadcast_1151)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_RoleRemove_Broadcast_1151)
}

::google::protobuf::uint8* Map_RoleRemove_Broadcast_1151::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_RoleRemove_Broadcast_1151)
  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_RoleRemove_Broadcast_1151)
  return target;
}

int Map_RoleRemove_Broadcast_1151::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_RoleRemove_Broadcast_1151)
  int total_size = 0;

  // optional int64 RoleUid = 1;
  if (this->roleuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleuid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_RoleRemove_Broadcast_1151::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_RoleRemove_Broadcast_1151)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_RoleRemove_Broadcast_1151* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_RoleRemove_Broadcast_1151>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_RoleRemove_Broadcast_1151)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_RoleRemove_Broadcast_1151)
    MergeFrom(*source);
  }
}

void Map_RoleRemove_Broadcast_1151::MergeFrom(const Map_RoleRemove_Broadcast_1151& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_RoleRemove_Broadcast_1151)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleuid() != 0) {
    set_roleuid(from.roleuid());
  }
}

void Map_RoleRemove_Broadcast_1151::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_RoleRemove_Broadcast_1151)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_RoleRemove_Broadcast_1151::CopyFrom(const Map_RoleRemove_Broadcast_1151& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_RoleRemove_Broadcast_1151)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_RoleRemove_Broadcast_1151::IsInitialized() const {

  return true;
}

void Map_RoleRemove_Broadcast_1151::Swap(Map_RoleRemove_Broadcast_1151* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_RoleRemove_Broadcast_1151::InternalSwap(Map_RoleRemove_Broadcast_1151* other) {
  std::swap(roleuid_, other->roleuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_RoleRemove_Broadcast_1151::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_RoleRemove_Broadcast_1151_descriptor_;
  metadata.reflection = Map_RoleRemove_Broadcast_1151_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_RoleRemove_Broadcast_1151

// optional int64 RoleUid = 1;
void Map_RoleRemove_Broadcast_1151::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Map_RoleRemove_Broadcast_1151::roleuid() const {
  // @@protoc_insertion_point(field_get:map.Map_RoleRemove_Broadcast_1151.RoleUid)
  return roleuid_;
}
 void Map_RoleRemove_Broadcast_1151::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:map.Map_RoleRemove_Broadcast_1151.RoleUid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map_AttrChange_Broadcast_1201::kAttrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map_AttrChange_Broadcast_1201::Map_AttrChange_Broadcast_1201()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.Map_AttrChange_Broadcast_1201)
}

void Map_AttrChange_Broadcast_1201::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  attrs_ = const_cast< ::map::Struct_Attr_Basics*>(&::map::Struct_Attr_Basics::default_instance());
}

Map_AttrChange_Broadcast_1201::Map_AttrChange_Broadcast_1201(const Map_AttrChange_Broadcast_1201& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:map.Map_AttrChange_Broadcast_1201)
}

void Map_AttrChange_Broadcast_1201::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  attrs_ = NULL;
}

Map_AttrChange_Broadcast_1201::~Map_AttrChange_Broadcast_1201() {
  // @@protoc_insertion_point(destructor:map.Map_AttrChange_Broadcast_1201)
  SharedDtor();
}

void Map_AttrChange_Broadcast_1201::SharedDtor() {
  if (this != default_instance_) {
    delete attrs_;
  }
}

void Map_AttrChange_Broadcast_1201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Map_AttrChange_Broadcast_1201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Map_AttrChange_Broadcast_1201_descriptor_;
}

const Map_AttrChange_Broadcast_1201& Map_AttrChange_Broadcast_1201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2eproto();
  return *default_instance_;
}

Map_AttrChange_Broadcast_1201* Map_AttrChange_Broadcast_1201::default_instance_ = NULL;

Map_AttrChange_Broadcast_1201* Map_AttrChange_Broadcast_1201::New(::google::protobuf::Arena* arena) const {
  Map_AttrChange_Broadcast_1201* n = new Map_AttrChange_Broadcast_1201;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Map_AttrChange_Broadcast_1201::Clear() {
// @@protoc_insertion_point(message_clear_start:map.Map_AttrChange_Broadcast_1201)
  if (GetArenaNoVirtual() == NULL && attrs_ != NULL) delete attrs_;
  attrs_ = NULL;
}

bool Map_AttrChange_Broadcast_1201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.Map_AttrChange_Broadcast_1201)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .map.Struct_Attr_Basics attrs = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attrs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.Map_AttrChange_Broadcast_1201)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.Map_AttrChange_Broadcast_1201)
  return false;
#undef DO_
}

void Map_AttrChange_Broadcast_1201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.Map_AttrChange_Broadcast_1201)
  // optional .map.Struct_Attr_Basics attrs = 1;
  if (this->has_attrs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->attrs_, output);
  }

  // @@protoc_insertion_point(serialize_end:map.Map_AttrChange_Broadcast_1201)
}

::google::protobuf::uint8* Map_AttrChange_Broadcast_1201::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.Map_AttrChange_Broadcast_1201)
  // optional .map.Struct_Attr_Basics attrs = 1;
  if (this->has_attrs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->attrs_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:map.Map_AttrChange_Broadcast_1201)
  return target;
}

int Map_AttrChange_Broadcast_1201::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:map.Map_AttrChange_Broadcast_1201)
  int total_size = 0;

  // optional .map.Struct_Attr_Basics attrs = 1;
  if (this->has_attrs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->attrs_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Map_AttrChange_Broadcast_1201::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.Map_AttrChange_Broadcast_1201)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Map_AttrChange_Broadcast_1201* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Map_AttrChange_Broadcast_1201>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.Map_AttrChange_Broadcast_1201)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.Map_AttrChange_Broadcast_1201)
    MergeFrom(*source);
  }
}

void Map_AttrChange_Broadcast_1201::MergeFrom(const Map_AttrChange_Broadcast_1201& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.Map_AttrChange_Broadcast_1201)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_attrs()) {
    mutable_attrs()->::map::Struct_Attr_Basics::MergeFrom(from.attrs());
  }
}

void Map_AttrChange_Broadcast_1201::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.Map_AttrChange_Broadcast_1201)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map_AttrChange_Broadcast_1201::CopyFrom(const Map_AttrChange_Broadcast_1201& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.Map_AttrChange_Broadcast_1201)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map_AttrChange_Broadcast_1201::IsInitialized() const {

  return true;
}

void Map_AttrChange_Broadcast_1201::Swap(Map_AttrChange_Broadcast_1201* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map_AttrChange_Broadcast_1201::InternalSwap(Map_AttrChange_Broadcast_1201* other) {
  std::swap(attrs_, other->attrs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Map_AttrChange_Broadcast_1201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Map_AttrChange_Broadcast_1201_descriptor_;
  metadata.reflection = Map_AttrChange_Broadcast_1201_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Map_AttrChange_Broadcast_1201

// optional .map.Struct_Attr_Basics attrs = 1;
bool Map_AttrChange_Broadcast_1201::has_attrs() const {
  return !_is_default_instance_ && attrs_ != NULL;
}
void Map_AttrChange_Broadcast_1201::clear_attrs() {
  if (GetArenaNoVirtual() == NULL && attrs_ != NULL) delete attrs_;
  attrs_ = NULL;
}
const ::map::Struct_Attr_Basics& Map_AttrChange_Broadcast_1201::attrs() const {
  // @@protoc_insertion_point(field_get:map.Map_AttrChange_Broadcast_1201.attrs)
  return attrs_ != NULL ? *attrs_ : *default_instance_->attrs_;
}
::map::Struct_Attr_Basics* Map_AttrChange_Broadcast_1201::mutable_attrs() {
  
  if (attrs_ == NULL) {
    attrs_ = new ::map::Struct_Attr_Basics;
  }
  // @@protoc_insertion_point(field_mutable:map.Map_AttrChange_Broadcast_1201.attrs)
  return attrs_;
}
::map::Struct_Attr_Basics* Map_AttrChange_Broadcast_1201::release_attrs() {
  // @@protoc_insertion_point(field_release:map.Map_AttrChange_Broadcast_1201.attrs)
  
  ::map::Struct_Attr_Basics* temp = attrs_;
  attrs_ = NULL;
  return temp;
}
void Map_AttrChange_Broadcast_1201::set_allocated_attrs(::map::Struct_Attr_Basics* attrs) {
  delete attrs_;
  attrs_ = attrs;
  if (attrs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:map.Map_AttrChange_Broadcast_1201.attrs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace map

// @@protoc_insertion_point(global_scope)
